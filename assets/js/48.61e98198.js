(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{491:function(t,a,s){"use strict";s.r(a);var e=s(15),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"你可能需要注意的-css-属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#你可能需要注意的-css-属性"}},[t._v("#")]),t._v(" 你可能需要注意的 CSS 属性")]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#margin"}},[t._v("margin")])]),s("li",[s("a",{attrs:{href:"#box-sizing"}},[t._v("box-sizing")])]),s("li",[s("a",{attrs:{href:"#css-度量单位"}},[t._v("CSS 度量单位")])]),s("li",[s("a",{attrs:{href:"#width-auto-和-width-100-的区别"}},[t._v("width:auto 和 width:100%的区别")])]),s("li",[s("a",{attrs:{href:"#display-、-position-和-float-的相互关系"}},[t._v("'display'、'position'和'float'的相互关系？")])]),s("li",[s("a",{attrs:{href:"#margin-重叠问题的理解。"}},[t._v("margin 重叠问题的理解。")])]),s("li",[s("a",{attrs:{href:"#使用-clear-属性清除浮动的原理"}},[t._v("使用 clear 属性清除浮动的原理？")])]),s("li",[s("a",{attrs:{href:"#zoom-1-的清除浮动原理"}},[t._v("zoom:1 的清除浮动原理?")])]),s("li",[s("a",{attrs:{href:"#如何让去除-inline-block-元素间间距"}},[t._v("如何让去除 inline-block 元素间间距？")])]),s("li",[s("a",{attrs:{href:"#overflow-scroll-时不能平滑滚动的问题怎么处理"}},[t._v("overflow:scroll 时不能平滑滚动的问题怎么处理？")])]),s("li",[s("a",{attrs:{href:"#transition-和-animation-的区别"}},[t._v("transition 和 animation 的区别")])]),s("li",[s("a",{attrs:{href:"#为什么-height-100-会无效"}},[t._v("为什么 height:100%会无效？")])]),s("li",[s("a",{attrs:{href:"#min-width-max-width-和-min-height-max-height-属性间的覆盖规则"}},[t._v("min-width/max-width 和 min-height/max-height 属性间的覆盖规则？")])]),s("li",[s("a",{attrs:{href:"#margin-auto-的填充规则"}},[t._v("margin:auto 的填充规则？")])]),s("li",[s("a",{attrs:{href:"#margin-无效的情形"}},[t._v("margin 无效的情形")])]),s("li",[s("a",{attrs:{href:"#border-的特殊性"}},[t._v("border 的特殊性？")])]),s("li",[s("a",{attrs:{href:"#什么是基线和-x-height"}},[t._v("什么是基线和 x-height？")])]),s("li",[s("a",{attrs:{href:"#line-height-的特殊性"}},[t._v("line-height 的特殊性？")])]),s("li",[s("a",{attrs:{href:"#vertical-align-的特殊性"}},[t._v("vertical-align 的特殊性？")])]),s("li",[s("a",{attrs:{href:"#overflow-的特殊性"}},[t._v("overflow 的特殊性？")])]),s("li",[s("a",{attrs:{href:"#absolute-与-overflow-的关系"}},[t._v("absolute 与 overflow 的关系？")])]),s("li",[s("a",{attrs:{href:"#clip-裁剪是什么"}},[t._v("clip 裁剪是什么？")])]),s("li",[s("a",{attrs:{href:"#relative-的特殊性"}},[t._v("relative 的特殊性？")])]),s("li",[s("a",{attrs:{href:"#font-weight-的特殊性"}},[t._v("font-weight 的特殊性？")])]),s("li",[s("a",{attrs:{href:"#text-indent-的特殊性"}},[t._v("text-indent 的特殊性？")])]),s("li",[s("a",{attrs:{href:"#letter-spacing-与字符间距"}},[t._v("letter-spacing 与字符间距？")])]),s("li",[s("a",{attrs:{href:"#word-spacing-与单词间距"}},[t._v("word-spacing 与单词间距？")])]),s("li",[s("a",{attrs:{href:"#white-space-与换行和空格的控制"}},[t._v("white-space 与换行和空格的控制？")])]),s("li",[s("a",{attrs:{href:"#隐藏元素的-background-image-到底加不加载"}},[t._v("隐藏元素的 background-image 到底加不加载？")])]),s("li",[s("a",{attrs:{href:"#你知道-css-中不同属性设置为百分比-时对应的计算基准"}},[t._v("你知道 CSS 中不同属性设置为百分比%时对应的计算基准？")])])])]),s("p"),t._v(" "),s("h2",{attrs:{id:"margin"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#margin"}},[t._v("#")]),t._v(" margin")]),t._v(" "),s("p",[s("code",[t._v("margin")]),t._v(" 属性接受 1~4 个值。每个值可以是"),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/length",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("<length>")]),s("OutboundLink")],1),t._v("，"),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/percentage",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("<percentage>")]),s("OutboundLink")],1),t._v("，"),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/margin#auto",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("<auto>")]),s("OutboundLink")],1),t._v("。取值为负时元素会比原来更接近临近元素。")]),t._v(" "),s("ul",[s("li",[t._v("当只指定"),s("strong",[t._v("一个")]),t._v("值时，该值会统一应用到"),s("strong",[t._v("全部四个边")]),t._v("的外边距上。")]),t._v(" "),s("li",[t._v("指定"),s("strong",[t._v("两个")]),t._v("值时，第一个值会应用于"),s("strong",[t._v("上边和下边")]),t._v("的外边距，第二个值应用于"),s("strong",[t._v("左边和右边")]),t._v("。")]),t._v(" "),s("li",[t._v("指定"),s("strong",[t._v("三个")]),t._v("值时，第一个值应用于"),s("strong",[t._v("上边")]),t._v("，第二个值应用于"),s("strong",[t._v("右边和左边")]),t._v("，第三个则应用于"),s("strong",[t._v("下边")]),t._v("的外边距。")]),t._v(" "),s("li",[t._v("指定"),s("strong",[t._v("四个")]),t._v("值时，依次（顺时针方向）作为"),s("strong",[t._v("上边")]),t._v("，"),s("strong",[t._v("右边")]),t._v("，"),s("strong",[t._v("下边")]),t._v("，和"),s("strong",[t._v("左边")]),t._v("的外边距。")])]),t._v(" "),s("p",[t._v("注意：指定三个值的时候分别表示上-左右-下，可能很多人(我是其中一个)常用到一，二，四个值，从而忽略了传三个值的用法")]),t._v(" "),s("p",[s("code",[t._v("margin-left:100px;")]),t._v("和"),s("code",[t._v("margin-right:-100px;")]),t._v("有啥区别？")]),t._v(" "),s("p",[s("code",[t._v("margin-left:100px;")]),t._v("它会将"),s("strong",[t._v("左边的元素")]),t._v("(或边界)推开，如果"),s("strong",[t._v("左边的元素")]),t._v("还有"),s("strong",[t._v("向左移动的空间")]),t._v("，它也会一起移动，最终两个元素距离为"),s("code",[t._v("100px")])]),t._v(" "),s("p",[s("code",[t._v("margin-right:-100px;")]),t._v("它会将"),s("strong",[t._v("自己")]),t._v("往右移动"),s("code",[t._v("100px")]),t._v("，"),s("strong",[t._v("无视边界和其它元素")]),t._v("，")]),t._v(" "),s("p",[t._v("个人理解：正值相当于两个元素之间相互推开，力的作用是相互的，如果另一方是元素，且该元素另一边有可移动的空间，则这两个元素会"),s("strong",[t._v("同时移动"),s("code",[t._v("50px")])]),t._v("，如果是边界，边界不会移动，则自己移动"),s("code",[t._v("100px")]),t._v("；负值相当于两个元素之间相互拥抱，同样，如果另一方是元素，也会"),s("strong",[t._v("同时移动一半距离")]),t._v("，如果是边界，则自己移动所有距离")]),t._v(" "),s("p",[t._v("例如：下面代码的表现形式")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("style")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token style"}},[s("span",{pre:!0,attrs:{class:"token language-css"}},[t._v("\n  "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("body")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-items")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" center"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("justify-content")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" center"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100vh"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".right")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" aquamarine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".left")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin-right")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" bisque"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("style")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("left"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("left"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("right"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("right"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br")])]),s("p",[s("img",{attrs:{src:"https://blog-images-1302031947.cos.ap-guangzhou.myqcloud.com/images/margin.gif",alt:"margin"}})]),t._v(" "),s("blockquote",[s("p",[t._v("注意：padding 没有负值！！！")])]),t._v(" "),s("h2",{attrs:{id:"box-sizing"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#box-sizing"}},[t._v("#")]),t._v(" box-sizing")]),t._v(" "),s("p",[s("code",[t._v("box-sizing")]),t._v(" 属性，值可取"),s("code",[t._v("border-box")]),t._v(","),s("code",[t._v("content-box")])]),t._v(" "),s("p",[s("code",[t._v("content-box")])]),t._v(" "),s("p",[t._v("默认值，标准盒子模型。 "),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/width",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("width")]),s("OutboundLink")],1),t._v(" 与 "),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/height",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("height")]),s("OutboundLink")],1),t._v(" 只包括内容的宽和高， 不包括边框（border），内边距（padding），外边距（margin）。注意: 内边距、边框和外边距都在这个盒子的外部。 比如说，"),s("code",[t._v(".box {width: 350px; border: 10px solid black;}")]),t._v(" 在浏览器中的渲染的实际宽度将是 370px。")]),t._v(" "),s("p",[t._v("尺寸计算公式：")]),t._v(" "),s("p",[s("code",[t._v("width")]),t._v(" = 内容的宽度")]),t._v(" "),s("p",[s("code",[t._v("height")]),t._v(" = 内容的高度")]),t._v(" "),s("p",[t._v("宽度和高度的计算值都不包含内容的边框（border）和内边距（padding）。")]),t._v(" "),s("p",[s("code",[t._v("border-box")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/width",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("width")]),s("OutboundLink")],1),t._v(" 和 "),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/height",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("height")]),s("OutboundLink")],1),t._v(" 属性包括内容，内边距和边框，但不包括外边距。这是当文档处于 Quirks 模式 时 Internet Explorer 使用的"),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Box_Model/Introduction_to_the_CSS_box_model",target:"_blank",rel:"noopener noreferrer"}},[t._v("盒模型"),s("OutboundLink")],1),t._v("。注意，填充和边框将在盒子内 , 例如, "),s("code",[t._v(".box {width: 350px; border: 10px solid black;}")]),t._v(" 导致在浏览器中呈现的宽度为 350px 的盒子。内容框不能为负，并且被分配到 0，使得不可能使用 border-box 使元素消失。")]),t._v(" "),s("p",[t._v("尺寸计算公式：")]),t._v(" "),s("p",[s("em",[s("code",[t._v("width")]),t._v(" = border + padding + 内容的宽度")])]),t._v(" "),s("p",[s("em",[s("code",[t._v("height")]),t._v(" = border + padding + 内容的高度")])]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("style")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token style"}},[s("span",{pre:!0,attrs:{class:"token language-css"}},[t._v("\n  "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".parent")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1px solid #000"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".child")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("box-sizing")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" border-box"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("padding-left")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 30px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("padding-right")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 30px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10px solid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" aqua"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("style")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("parent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("child"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br")])]),s("p",[t._v("效果如图：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://blog-images-1302031947.cos.ap-guangzhou.myqcloud.com/images/image-20210902190306600.png",alt:"image-20210902190306600"}})]),t._v(" "),s("h2",{attrs:{id:"css-度量单位"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-度量单位"}},[t._v("#")]),t._v(" CSS 度量单位")]),t._v(" "),s("p",[t._v("度量单位分"),s("strong",[t._v("相对长度单位")]),t._v("、"),s("strong",[t._v("绝对长度单位")]),t._v("、"),s("strong",[t._v("百分比单位")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("相对单位：px，em，rem，ch，ex")])]),t._v(" "),s("li",[s("p",[t._v("绝对单位：cm，mm，pt，in，pc，Q")]),t._v(" "),s("ul",[s("li",[t._v("in > cm > pc > mm > pt > Q")])])]),t._v(" "),s("li",[s("p",[t._v("百分比单位：%，vmin，vmax，vh，vw，")])]),t._v(" "),s("li",[s("p",[t._v("px：像素（Pixel）")]),t._v(" "),s("ul",[s("li",[t._v("像素是相对于"),s("strong",[t._v("显示器屏幕分辨率")]),t._v("而言的。")]),t._v(" "),s("li",[t._v("例如，windows 的用户所使用的分辨率一般是 96 像素/英寸。而 Mac 的用户所使用的分辨率一般是 72 像素/英寸。")])])]),t._v(" "),s("li",[s("p",[t._v("em：相对于父元素的"),s("code",[t._v("font-size")])])]),t._v(" "),s("li",[s("p",[t._v("rem：相对于根元素（html）的"),s("code",[t._v("font-size")])])]),t._v(" "),s("li",[s("p",[t._v("%：宽高随着浏览器的大小相应变化")]),t._v(" "),s("ul",[s("li",[t._v("子元素的"),s("code",[t._v("height")]),t._v("或"),s("code",[t._v("width")]),t._v("中使用百分比, 是相对于子元素的直接父元素, "),s("code",[t._v("width")]),t._v("相对于父元素的"),s("code",[t._v("width")]),t._v(", "),s("code",[t._v("height")]),t._v("相对于父元素的"),s("code",[t._v("height")])]),t._v(" "),s("li",[t._v("子元素的"),s("code",[t._v("top")]),t._v("和"),s("code",[t._v("bottom")]),t._v("如果设置百分比, 则相对于直接非"),s("code",[t._v("static")]),t._v("定位的父元素的高度, 同样子元素的"),s("code",[t._v("left")]),t._v("和"),s("code",[t._v("right")]),t._v("如果设置百分比, 则相对于直接非"),s("code",[t._v("static")]),t._v("定位父元素的宽度")]),t._v(" "),s("li",[t._v("子元素的"),s("code",[t._v("padding")]),t._v("如果设置百分比, 不论是垂直方向或者是水平方向, 都相对于直接父亲元素的"),s("code",[t._v("width")]),t._v(", 而与父元素的"),s("code",[t._v("height")]),t._v("无关")]),t._v(" "),s("li",[t._v("子元素的"),s("code",[t._v("margin")]),t._v("如果设置成百分比, 不论是垂直方向还是水平方向, 都相对于直接父元素的"),s("code",[t._v("width")])]),t._v(" "),s("li",[t._v("设置"),s("code",[t._v("border-radius")]),t._v("为百分比, 则是相对于自身的宽度, 还有"),s("code",[t._v("translate")]),t._v(", "),s("code",[t._v("background-size")]),t._v("等都是相对于自身的")])])]),t._v(" "),s("li",[s("p",[t._v("vw：相对于视窗的宽度, "),s("code",[t._v("1vw")]),t._v("等于视窗宽度的"),s("code",[t._v("1%")])])]),t._v(" "),s("li",[s("p",[t._v("vh：相对于视窗的高度, "),s("code",[t._v("1vh")]),t._v("等于视窗高度的"),s("code",[t._v("1%")])])]),t._v(" "),s("li",[s("p",[t._v("vmin："),s("code",[t._v("vw")]),t._v("和"),s("code",[t._v("vh")]),t._v("中的较小值")])]),t._v(" "),s("li",[s("p",[t._v("vmax："),s("code",[t._v("vw")]),t._v("和"),s("code",[t._v("vh")]),t._v("中的较大值")]),t._v(" "),s("ul",[s("li",[t._v("例如，视窗高度 900px，视窗宽度 600px，"),s("code",[t._v("1vmin = 600px * 1% = 6px")]),t._v("，"),s("code",[t._v("1vmax = 900px * 1% = 9px")])])])]),t._v(" "),s("li",[s("p",[t._v("ex："),s("code",[t._v("ex")]),t._v("是指所用字体中小写"),s("code",[t._v("x")]),t._v("的高度, 但不同字体"),s("code",[t._v("x")]),t._v("的高度可能不同, 对于很多字体来说"),s("code",[t._v("1ex = 0.5em")]),t._v(", 所以很多浏览器在实际应用中取"),s("code",[t._v("em")]),t._v("值一半作为"),s("code",[t._v("ex")]),t._v("值, "),s("code",[t._v("ex")]),t._v("单位在实际中常用于微调")])]),t._v(" "),s("li",[s("p",[t._v("ch："),s("code",[t._v("ch")]),t._v("与"),s("code",[t._v("ex")]),t._v("类似, 这一单位代表元素所用字体中"),s("code",[t._v("0")]),t._v("这一字形的宽度, 更准确地说是"),s("code",[t._v("0")]),t._v("这一字形的预测尺寸, 如果无法确定"),s("code",[t._v("0")]),t._v("字形的大小, 则必须假定其宽为"),s("code",[t._v("0.5em")]),t._v("高为"),s("code",[t._v("1em")]),t._v(", 也就是取"),s("code",[t._v("em")]),t._v("值的一半作为"),s("code",[t._v("ch")]),t._v(" 值")])]),t._v(" "),s("li",[s("p",[t._v("cm：厘米（centimeters）， "),s("code",[t._v("1cm = 10mm = 96px/2.54 = 37.8px")])])]),t._v(" "),s("li",[s("p",[t._v("mm：毫米（millimeters），"),s("code",[t._v("1mm = 0.1cm = 3.78px")])])]),t._v(" "),s("li",[s("p",[t._v("Q：四分之一毫米（quarter-millimeters），"),s("code",[t._v("1Q = 1/40cm = 0.945px")])])]),t._v(" "),s("li",[s("p",[t._v("pt：点（points），"),s("code",[t._v("1pt = 1/72in = 0.0139in = 1/722.54cm = 1/7296px = 1.33px")])])]),t._v(" "),s("li",[s("p",[t._v("in：英寸（inches），"),s("code",[t._v("1in = 2.54cm = 96px")])])]),t._v(" "),s("li",[s("p",[t._v("pc：派卡（picas）， "),s("code",[t._v("1pc = 1/6in = 12pt = 1/6 * 96px = 16px")])])])]),t._v(" "),s("blockquote",[s("p",[t._v("https://drafts.csswg.org/css-values-3/#em")])]),t._v(" "),s("h2",{attrs:{id:"width-auto-和-width-100-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#width-auto-和-width-100-的区别"}},[t._v("#")]),t._v(" width:auto 和 width:100%的区别")]),t._v(" "),s("p",[t._v("一般而言")]),t._v(" "),s("p",[t._v("width:100%会使元素 box 的宽度等于父元素的 content box 的宽度。")]),t._v(" "),s("p",[t._v("width:auto 会使元素撑满整个父元素，margin、border、padding、content 区域会自动分配水平空间。")]),t._v(" "),s("h2",{attrs:{id:"display-、-position-和-float-的相互关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#display-、-position-和-float-的相互关系"}},[t._v("#")]),t._v(" 'display'、'position'和'float'的相互关系？")]),t._v(" "),s("p",[t._v("（1）首先我们判断 display 属性是否为 none，如果为 none，则 position 和 float 属性的值不影响元素最后的表现。")]),t._v(" "),s("p",[t._v("（2）然后判断 position 的值是否为 absolute 或者 fixed，如果是，则 float 属性失效，并且 display 的值应该被设置为 table 或者 block，具体转换需要看初始转换值。")]),t._v(" "),s("p",[t._v("（3）如果 position 的值不为 absolute 或者 fixed，则判断 float 属性的值是否为 none，如果不是，则 display 的值则按上面的规则转换。注意，如果 position 的值为 relative 并且 float 属性的值存在，则 relative 相对于浮动后的最终位置定位。")]),t._v(" "),s("p",[t._v("（4）如果 float 的值为 none，则判断元素是否为根元素，如果是根元素则 display 属性按照上面的规则转换，如果不是，则保持指定的 display 属性值不变。")]),t._v(" "),s("p",[t._v("总的来说，可以把它看作是一个类似优先级的机制，"),s("code",[t._v('"position:absolute"')]),t._v("和"),s("code",[t._v('"position:fixed"')]),t._v("优先级最高，有它存在的时候，浮动不起作用，"),s("code",[t._v("'display'")]),t._v("的值也需要调整；其次，元素的"),s("code",[t._v("'float'")]),t._v("特性的值不是"),s("code",[t._v('"none"')]),t._v("的时候或者它是根元素的时候，调整"),s("code",[t._v("'display'")]),t._v("的值；最后，非根元素，并且非浮动元素，并且非绝对定位的元素，"),s("code",[t._v("'display'")]),t._v("特性值同设置值。")]),t._v(" "),s("h2",{attrs:{id:"margin-重叠问题的理解。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#margin-重叠问题的理解。"}},[t._v("#")]),t._v(" margin 重叠问题的理解。")]),t._v(" "),s("p",[t._v("块级元素的上外边距（margin-top）与下外边距（margin-bottom）有时会合并为单个外边距，这样的现象称为“margin 合并”。")]),t._v(" "),s("p",[t._v("产生折叠的必备条件：margin 必须是邻接的!")]),t._v(" "),s("p",[t._v("而根据 w3c 规范，两个 margin 是邻接的必须满足以下条件：")]),t._v(" "),s("ul",[s("li",[t._v("必须是处于"),s("strong",[t._v("常规文档流")]),t._v("（非 float 和绝对定位）的块级盒子，并且处于同一个 BFC 当中。")]),t._v(" "),s("li",[t._v("没有线盒，没有空隙，"),s("strong",[t._v("没有 padding 和 border")]),t._v("将他们分隔开")]),t._v(" "),s("li",[t._v("都属于垂直方向上相邻的外边距，可以是下面任意一种情况")]),t._v(" "),s("li",[t._v("元素的 margin-top 与其第一个常规文档流的子元素的 margin-top")]),t._v(" "),s("li",[t._v("元素的 margin-bottom 与其下一个常规文档流的兄弟元素的 margin-top")]),t._v(" "),s("li",[t._v("height 为 auto 的元素的 margin-bottom 与其最后一个常规文档流的子元素的 margin-bottom")]),t._v(" "),s("li",[t._v("高度为 0 并且最小高度也为 0，不包含常规文档流的子元素，并且自身没有建立新的 BFC 的元素的 margin-top 和 margin-bottom")])]),t._v(" "),s("p",[t._v("margin 合并的 3 种场景：")]),t._v(" "),s("p",[t._v("（1）相邻兄弟元素 margin 合并。")]),t._v(" "),s("p",[t._v("解决办法：")]),t._v(" "),s("ul",[s("li",[t._v("设置块状格式化上下文元素（BFC）")])]),t._v(" "),s("p",[t._v("（2）父级和第一个/最后一个子元素的 margin 合并。")]),t._v(" "),s("p",[t._v("解决办法：")]),t._v(" "),s("p",[t._v("对于 margin-top 合并，可以进行如下操作（满足一个条件即可）：")]),t._v(" "),s("ul",[s("li",[t._v("父元素设置为块状格式化上下文元素；")]),t._v(" "),s("li",[t._v("父元素设置 border-top 值；")]),t._v(" "),s("li",[t._v("父元素设置 padding-top 值；")]),t._v(" "),s("li",[t._v("父元素和第一个子元素之间添加内联元素进行分隔。")])]),t._v(" "),s("p",[t._v("对于 margin-bottom 合并，可以进行如下操作（满足一个条件即可）：")]),t._v(" "),s("ul",[s("li",[t._v("父元素设置为块状格式化上下文元素；")]),t._v(" "),s("li",[t._v("父元素设置 border-bottom 值；")]),t._v(" "),s("li",[t._v("父元素设置 padding-bottom 值；")]),t._v(" "),s("li",[t._v("父元素和最后一个子元素之间添加内联元素进行分隔；")]),t._v(" "),s("li",[t._v("父元素设置 height、min-height 或 max-height。")])]),t._v(" "),s("p",[t._v("（3）空块级元素的 margin 合并。")]),t._v(" "),s("p",[t._v("解决办法：")]),t._v(" "),s("ul",[s("li",[t._v("设置垂直方向的 border；")]),t._v(" "),s("li",[t._v("设置垂直方向的 padding；")]),t._v(" "),s("li",[t._v("里面添加内联元素（直接 Space 键空格是没用的）；")]),t._v(" "),s("li",[t._v("设置 height 或者 min-height。")])]),t._v(" "),s("p",[s("strong",[t._v("回答：")])]),t._v(" "),s("p",[t._v("margin 重叠指的是在垂直方向上，两个相邻元素的 margin 发生重叠的情况。")]),t._v(" "),s("p",[t._v("一般来说可以分为四种情形：")]),t._v(" "),s("p",[t._v("第一种是相邻兄弟元素的 marin-bottom 和 margin-top 的值发生重叠。这种情况下我们可以通过设置其中一个元素为 BFC 来解决。")]),t._v(" "),s("p",[t._v("第二种是父元素的 margin-top 和子元素的 margin-top 发生重叠。它们发生重叠是因为它们是相邻的，所以我们可以通过这一点来解决这个问题。我们可以为父元素设置 border-top、padding-top 值来分隔它们，当然我们也可以将父元素设置为 BFC 来解决。")]),t._v(" "),s("p",[t._v("第三种是高度为 auto 的父元素的 margin-bottom 和子元素的 margin-bottom 发生重叠。它们发生重叠一个是因为它们相邻，一个是因为父元素的高度不固定。因此我们可以为父元素设置 border-bottom、padding-bottom 来分隔它们，也可以为父元素设置一个高度，max-height 和 min-height 也能解决这个问题。当然将父元素设置为 BFC 是最简单的方法。")]),t._v(" "),s("p",[t._v("第四种情况，是没有内容的元素，自身的 margin-top 和 margin-bottom 发生的重叠。我们可以通过为其设置 border、padding 或者高度来解决这个问题。")]),t._v(" "),s("h2",{attrs:{id:"使用-clear-属性清除浮动的原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-clear-属性清除浮动的原理"}},[t._v("#")]),t._v(" 使用 clear 属性清除浮动的原理？")]),t._v(" "),s("p",[t._v("使用 clear 属性清除浮动，其语法如下：")]),t._v(" "),s("div",{staticClass:"language-css line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("clear")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" none|left|right|both"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("如果单看字面意思，clear:left 应该是“清除左浮动”，clear:right 应该是“清除右浮动”的意思，实际上，这种解释是有问题的，因为浮动一直还在，并没有清除。")]),t._v(" "),s("p",[t._v("官方对 clear 属性的解释是：“元素盒子的边不能和前面的浮动元素相邻。”，我们对元素设置 clear 属性是为了避免浮动元素对该元素的影响，而不是清除掉浮动。")]),t._v(" "),s("p",[t._v("还需要注意的一点是 clear 属性指的是元素盒子的边不能和前面的浮动元素相邻，注意这里“前面的”3 个字，也就是 clear 属性对“后面的”浮动元素是不闻不问的。考虑到 float 属性要么是 left，要么是 right，不可能同时存在，同时由于 clear 属性对“后面的”浮动元素不闻不问，因此，当 clear:left 有效的时候，clear:right 必定无效，也就是此时 clear:left 等同于设置 clear:both；同样地，clear:right 如果有效也是等同于设置 clear:both。由此可见，clear:left 和 clear:right 这两个声明就没有任何使用的价值，至少在 CSS 世界中是如此，直接使用 clear:both 吧。")]),t._v(" "),s("p",[t._v("一般使用伪元素的方式清除浮动")]),t._v(" "),s("div",{staticClass:"language-css line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".clear::after")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" table"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" //也可以是"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'block'")]),t._v("，或者是"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'list-item'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("clear")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" both"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("clear 属性只有块级元素才有效的，而::after 等伪元素默认都是内联水平，这就是借助伪元素清除浮动影响时需要设置 display 属性值的原因。")]),t._v(" "),s("h2",{attrs:{id:"zoom-1-的清除浮动原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#zoom-1-的清除浮动原理"}},[t._v("#")]),t._v(" zoom:1 的清除浮动原理?")]),t._v(" "),s("p",[t._v("清除浮动，触发 hasLayout； zoom 属性是 IE 浏览器的专有属性，它可以设置或检索对象的缩放比例。解决 ie 下比较奇葩的 bug。譬如外边距（margin）的重叠，浮动清除，触发 ie 的 haslayout 属性等。")]),t._v(" "),s("p",[t._v("来龙去脉大概如下：")]),t._v(" "),s("p",[t._v("当设置了 zoom 的值之后，所设置的元素就会就会扩大或者缩小，高度宽度就会重新计算了，这里一旦改变 zoom 值时其实也会发生重新渲染，运用这个原理，也就解决了 ie 下子元素浮动时候父元素不随着自动扩大的问题。")]),t._v(" "),s("p",[t._v("zoom 属性是 IE 浏览器的专有属性，火狐和老版本的 webkit 核心的浏览器都不支持这个属性。然而，zoom 现在已经被逐步标准化，出现在 CSS3.0 规范草案中。")]),t._v(" "),s("p",[t._v("目前非 ie 由于不支持这个属性，它们又是通过什么属性来实现元素的缩放呢？可以通过 css3 里面的动画属性 scale 进行缩放。")]),t._v(" "),s("h2",{attrs:{id:"如何让去除-inline-block-元素间间距"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何让去除-inline-block-元素间间距"}},[t._v("#")]),t._v(" 如何让去除 inline-block 元素间间距？")]),t._v(" "),s("p",[t._v("移除空格、使用 margin 负值、使用 font-size:0、letter-spacing、word-spacing")]),t._v(" "),s("h2",{attrs:{id:"overflow-scroll-时不能平滑滚动的问题怎么处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#overflow-scroll-时不能平滑滚动的问题怎么处理"}},[t._v("#")]),t._v(" overflow:scroll 时不能平滑滚动的问题怎么处理？")]),t._v(" "),s("p",[t._v("以下代码可解决这种卡顿的问题："),s("code",[t._v("-webkit-overflow-scrolling:touch;")]),t._v("是因为这行代码启用了硬件加速特性，所以滑动很流畅。")]),t._v(" "),s("h2",{attrs:{id:"transition-和-animation-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#transition-和-animation-的区别"}},[t._v("#")]),t._v(" transition 和 animation 的区别")]),t._v(" "),s("p",[t._v("transition 关注的是 CSS property 的变化，property 值和时间的关系是一个三次贝塞尔曲线。")]),t._v(" "),s("p",[t._v("animation 作用于元素本身而不是样式属性，可以使用关键帧的概念，应该说可以实现更自由的动画效果。")]),t._v(" "),s("h2",{attrs:{id:"为什么-height-100-会无效"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么-height-100-会无效"}},[t._v("#")]),t._v(" 为什么 height:100%会无效？")]),t._v(" "),s("p",[t._v("对于普通文档流中的元素，百分比高度值要想起作用，其父级必须有一个可以生效的高度值。")]),t._v(" "),s("p",[t._v("原因是如果包含块的高度没有显式指定（即高度由内容决定），并且该元素不是绝对定位，则计算值为 auto，因为解释成了 auto，所以无法参与计算。")]),t._v(" "),s("p",[t._v("使用绝对定位的元素会有计算值，即使祖先元素的 height 计算为 auto 也是如此。")]),t._v(" "),s("h2",{attrs:{id:"min-width-max-width-和-min-height-max-height-属性间的覆盖规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#min-width-max-width-和-min-height-max-height-属性间的覆盖规则"}},[t._v("#")]),t._v(" min-width/max-width 和 min-height/max-height 属性间的覆盖规则？")]),t._v(" "),s("p",[t._v("（1）max-width 会覆盖 width，即使 width 是行类样式或者设置了!important。")]),t._v(" "),s("p",[t._v("（2）min-width 会覆盖 max-width，此规则发生在 min-width 和 max-width 冲突的时候。")]),t._v(" "),s("h2",{attrs:{id:"margin-auto-的填充规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#margin-auto-的填充规则"}},[t._v("#")]),t._v(" margin:auto 的填充规则？")]),t._v(" "),s("p",[t._v("margin 的'auto'可不是摆设，是具有强烈的计算意味的关键字，用来计算元素对应方向应该获得的剩余间距大小。但是触发 margin:auto 计算有一个前提条件，就是 width 或 height 为 auto 时，元素是具有对应方向的自动填充特性的。")]),t._v(" "),s("p",[t._v("（1）如果一侧定值，一侧 auto，则 auto 为剩余空间大小。（2）如果两侧均是 auto，则平分剩余空间。")]),t._v(" "),s("h2",{attrs:{id:"margin-无效的情形"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#margin-无效的情形"}},[t._v("#")]),t._v(" margin 无效的情形")]),t._v(" "),s("p",[t._v("（1）display 计算值 inline 的非替换元素的垂直 margin 是无效的。对于内联替换元素，垂直 margin 有效，并且没有 margin 合并的问题。")]),t._v(" "),s("p",[t._v("（2）表格中的"),s("code",[t._v("<tr>")]),t._v("和"),s("code",[t._v("<td>")]),t._v("元素或者设置 display 计算值是 table-cell 或 table-row 的元素的 margin 都是无效的。")]),t._v(" "),s("p",[t._v("（3）绝对定位元素非定位方位的 margin 值“无效”。")]),t._v(" "),s("p",[t._v("（4）定高容器的子元素的 margin-bottom 或者宽度定死的子元素的 margin-right 的定位“失效”。")]),t._v(" "),s("h2",{attrs:{id:"border-的特殊性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#border-的特殊性"}},[t._v("#")]),t._v(" border 的特殊性？")]),t._v(" "),s("p",[t._v("（1）border-width 却不支持百分比。")]),t._v(" "),s("p",[t._v("（2）border-style 的默认值是 none，有一部分人可能会误以为是 solid。这也是单纯设置 border-width 或 border-color 没有边框显示的原因。")]),t._v(" "),s("p",[t._v("（3）border-style:double 的表现规则：双线宽度永远相等，中间间隔 ±1。")]),t._v(" "),s("p",[t._v("（4）border-color 默认颜色就是 color 色值。")]),t._v(" "),s("p",[t._v("（5）默认 background 背景图片是相对于 padding box 定位的。")]),t._v(" "),s("h2",{attrs:{id:"什么是基线和-x-height"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是基线和-x-height"}},[t._v("#")]),t._v(" 什么是基线和 x-height？")]),t._v(" "),s("p",[t._v("字母 x 的下边缘（线）就是我们的基线。")]),t._v(" "),s("p",[t._v("x-height 指的就是小写字母 x 的高度，术语描述就是基线和等分线（meanline）（也称作中线，midline）之间的距离。在 CSS 世界中，middle 指的是基线往上 1/2x-height 高度。我们可以近似理解为字母 x 交叉点那个位置。")]),t._v(" "),s("p",[t._v("ex 是 CSS 中的一个相对单位，指的是小写字母 x 的高度，没错，就是指 x-height。ex 的价值就在其副业上不受字体和字号影响的内联元素的垂直居中对齐效果。内联元素默认是基线对齐的，而基线就是 x 的底部，而 1ex 就是一个 x 的高度。")]),t._v(" "),s("h2",{attrs:{id:"line-height-的特殊性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#line-height-的特殊性"}},[t._v("#")]),t._v(" line-height 的特殊性？")]),t._v(" "),s("p",[t._v("（1）对于非替换元素的纯内联元素，其可视高度完全由 line-height 决定。对于文本这样的纯内联元素，line-height 就是高度计算的基石，用专业说法就是指定了用来计算行框盒子高度的基础高度。")]),t._v(" "),s("p",[t._v("（2）内联元素的高度由固定高度和不固定高度组成，这个不固定的部分就是这里的“行距”。换句话说，line-height 之所以起作用，就是通过改变“行距”来实现的。在 CSS 中，“行距”分散在当前文字的上方和下方，也就是即使是第一行文字，其上方也是有“行距”的，只不过这个“行距”的高度仅仅是完整“行距”高度的一半，因此，也被称为“半行距”。")]),t._v(" "),s("p",[t._v("（3）行距=line-height-font-size。")]),t._v(" "),s("p",[t._v("（4）border 以及 line-height 等传统 CSS 属性并没有小数像素的概念。如果标注的是文字上边距，则向下取整；如果是文字下边距，则向上取整。")]),t._v(" "),s("p",[t._v("（5）对于纯文本元素，line-height 直接决定了最终的高度。但是，如果同时有替换元素，则 line-height 只能决定最小高度。")]),t._v(" "),s("p",[t._v("（6）对于块级元素，line-height 对其本身是没有任何作用的，我们平时改变 line-height，块级元素的高度跟着变化实际上是通过改变块级元素里面内联级别元素占据的高度实现的。")]),t._v(" "),s("p",[t._v("（7）line-height 的默认值是 normal，还支持数值、百分比值以及长度值。为数值类型时，其最终的计算值是和当前 font-size 相乘后的值。为百分比值时，其最终的计算值是和当前 font-size 相乘后的值。为长度值时原意不变。")]),t._v(" "),s("p",[t._v("（8）如果使用数值作为 line-height 的属性值，那么所有的子元素继承的都是这个值；但是，如果使用百分比值或者长度值作为属性值，那么所有的子元素继承的是最终的计算值。")]),t._v(" "),s("p",[t._v("（9）无论内联元素 line-height 如何设置，最终父级元素的高度都是由数值大的那个 line-height 决定的。")]),t._v(" "),s("p",[t._v("（10）只要有“内联盒子”在，就一定会有“行框盒子”，就是每一行内联元素外面包裹的一层看不见的盒子。然后，重点来了，在每个“行框盒子”前面有一个宽度为 0 的具有该元素的字体和行高属性的看不见的“幽灵空白节点”。")]),t._v(" "),s("h2",{attrs:{id:"vertical-align-的特殊性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vertical-align-的特殊性"}},[t._v("#")]),t._v(" vertical-align 的特殊性？")]),t._v(" "),s("p",[t._v("（1）vertical-align 的默认值是 baseline，即基线对齐，而基线的定义是字母 x 的下边缘。因此，内联元素默认都是沿着字母 x 的下边缘对齐的。对于图片等替换元素，往往使用元素本身的下边缘作为基线。一个 inline-block 元素，如果里面没有内联元素，或者 overflow 不是 visible，则该元素的基线就是其 margin 底边缘；否则其基线就是元素里面最后一行内联元素的基线。")]),t._v(" "),s("p",[t._v("（2）vertical-align:top 就是垂直上边缘对齐，如果是内联元素，则和这一行位置最高的内联元素的顶部对齐；如果 display 计算值是 table-cell 的元素，我们不妨脑补成"),s("code",[t._v("<td>")]),t._v("元素，则和"),s("code",[t._v("<tr>")]),t._v("元素上边缘对齐。")]),t._v(" "),s("p",[t._v("（3）vertical-align:middle 是中间对齐，对于内联元素，元素的垂直中心点和行框盒子基线往上 1/2x-height 处对齐。对于 table-cell 元素，单元格填充盒子相对于外面的表格行居中对齐。")]),t._v(" "),s("p",[t._v("（4）vertical-align 支持数值属性，根据数值的不同，相对于基线往上或往下偏移，如果是负值，往下偏移，如果是正值，往上偏移。")]),t._v(" "),s("p",[t._v("（5）vertical-align 属性的百分比值则是相对于 line-height 的计算值计算的。")]),t._v(" "),s("p",[t._v("（6）vertical-align 起作用是有前提条件的，这个前提条件就是：只能应用于内联元素以及 display 值为 table-cell 的元素。")]),t._v(" "),s("p",[t._v("（7）table-cell 元素设置 vertical-align 垂直对齐的是子元素，但是其作用的并不是子元素，而是 table-cell 元素自身。")]),t._v(" "),s("h2",{attrs:{id:"overflow-的特殊性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#overflow-的特殊性"}},[t._v("#")]),t._v(" overflow 的特殊性？")]),t._v(" "),s("p",[t._v("（1）一个设置了 overflow:hidden 声明的元素，假设同时存在 border 属性和 padding 属性，则当子元素内容超出容器宽度高度限制的时候，剪裁的边界是 border box 的内边缘，而非 padding box 的内边缘。")]),t._v(" "),s("p",[t._v("（2）HTML 中有两个标签是默认可以产生滚动条的，一个是根元素"),s("code",[t._v("<html>")]),t._v("，另一个是文本域"),s("code",[t._v("<textarea>")]),t._v("。")]),t._v(" "),s("p",[t._v("（3）滚动条会占用容器的可用宽度或高度。")]),t._v(" "),s("p",[t._v("（4）元素设置了 overflow:hidden 声明，里面内容高度溢出的时候，滚动依然存在，仅仅滚动条不存在！")]),t._v(" "),s("h2",{attrs:{id:"absolute-与-overflow-的关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#absolute-与-overflow-的关系"}},[t._v("#")]),t._v(" absolute 与 overflow 的关系？")]),t._v(" "),s("p",[t._v("（1）如果 overflow 不是定位元素，同时绝对定位元素和 overflow 容器之间也没有定位元素，则 overflow 无法对 absolute 元素进行剪裁。")]),t._v(" "),s("p",[t._v("（2）如果 overflow 的属性值不是 hidden 而是 auto 或者 scroll，即使绝对定位元素高宽比 overflow 元素高宽还要大，也都不会出现滚动条。")]),t._v(" "),s("p",[t._v("（3）overflow 元素自身 transform 的时候，Chrome 和 Opera 浏览器下的 overflow 剪裁是无效的。")]),t._v(" "),s("h2",{attrs:{id:"clip-裁剪是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#clip-裁剪是什么"}},[t._v("#")]),t._v(" clip 裁剪是什么？")]),t._v(" "),s("p",[t._v("所谓“可访问性隐藏”，指的是虽然内容肉眼看不见，但是其他辅助设备却能够进行识别和访问的隐藏。")]),t._v(" "),s("p",[t._v("clip 剪裁被我称为“最佳可访问性隐藏”的另外一个原因就是，它具有更强的普遍适应性，任何元素、任何场景都可以无障碍使用。")]),t._v(" "),s("h2",{attrs:{id:"relative-的特殊性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#relative-的特殊性"}},[t._v("#")]),t._v(" relative 的特殊性？")]),t._v(" "),s("p",[t._v("（1）相对定位元素的 left/top/right/bottom 的百分比值是相对于包含块计算的，而不是自身。注意，虽然定位位移是相对自身，但是百分比值的计算值不是。")]),t._v(" "),s("p",[t._v("（2）top 和 bottom 这两个垂直方向的百分比值计算跟 height 的百分比值是一样的，都是相对高度计算的。同时，如果包含块的高度是 auto，那么计算值是 0，偏移无效，也就是说，如果父元素没有设定高度或者不是“格式化高度”，那么 relative 类似 top:20%的代码等同于 top:0。")]),t._v(" "),s("p",[t._v("（3）当相对定位元素同时应用对立方向定位值的时候，也就是 top/bottom 和 left/right 同时使用的时候，只有一个方向的定位属性会起作用。而谁起作用则是与文档流的顺序有关的，默认的文档流是自上而下、从左往右，因此 top/bottom 同时使用的时候，bottom 失效；left/right 同时使用的时候，right 失效。")]),t._v(" "),s("h2",{attrs:{id:"font-weight-的特殊性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#font-weight-的特殊性"}},[t._v("#")]),t._v(" font-weight 的特殊性？")]),t._v(" "),s("p",[t._v("如果使用数值作为 font-weight 属性值，必须是 100 ～ 900 的整百数。因为这里的数值仅仅是外表长得像数值，实际上是一个具有特定含义的关键字，并且这里的数值关键字和字母关键字之间是有对应关系的。")]),t._v(" "),s("h2",{attrs:{id:"text-indent-的特殊性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#text-indent-的特殊性"}},[t._v("#")]),t._v(" text-indent 的特殊性？")]),t._v(" "),s("p",[t._v("（1）text-indent 仅对第一行内联盒子内容有效。")]),t._v(" "),s("p",[t._v("（2）非替换元素以外的 display 计算值为 inline 的内联元素设置 text-indent 值无效，如果计算值 inline-block/inline-table 则会生效。")]),t._v(" "),s("p",[t._v("（3）"),s("code",[t._v("<input>")]),t._v("标签按钮 text-indent 值无效。")]),t._v(" "),s("p",[t._v("（4）"),s("code",[t._v("<button>")]),t._v("标签按钮 text-indent 值有效。")]),t._v(" "),s("p",[t._v("（5）text-indent 的百分比值是相对于当前元素的“包含块”计算的，而不是当前元素。")]),t._v(" "),s("h2",{attrs:{id:"letter-spacing-与字符间距"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#letter-spacing-与字符间距"}},[t._v("#")]),t._v(" letter-spacing 与字符间距？")]),t._v(" "),s("p",[t._v("letter-spacing 可以用来控制字符之间的间距，这里说的“字符”包括英文字母、汉字以及空格等。")]),t._v(" "),s("p",[t._v("letter-spacing 具有以下一些特性。")]),t._v(" "),s("p",[t._v("（1）继承性。")]),t._v(" "),s("p",[t._v("（2）默认值是 normal 而不是 0。虽然说正常情况下，normal 的计算值就是 0，但两者还是有差别的，在有些场景下，letter-spacing 会调整 normal 的计算值以实现更好的版面布局。")]),t._v(" "),s("p",[t._v("（3）支持负值，且值足够大的时候，会让字符形成重叠，甚至反向排列。")]),t._v(" "),s("p",[t._v("（4）和 text-indent 属性一样，无论值多大或多小，第一行一定会保留至少一个字符。")]),t._v(" "),s("p",[t._v("（5）支持小数值，即使 0.1px 也是支持的。")]),t._v(" "),s("p",[t._v("（6）暂不支持百分比值。")]),t._v(" "),s("h2",{attrs:{id:"word-spacing-与单词间距"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#word-spacing-与单词间距"}},[t._v("#")]),t._v(" word-spacing 与单词间距？")]),t._v(" "),s("p",[t._v("letter-spacing 作用于所有字符，但 word-spacing 仅作用于空格字符。换句话说，word-spacing 的作用就是增加空格的间隙宽度。")]),t._v(" "),s("h2",{attrs:{id:"white-space-与换行和空格的控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#white-space-与换行和空格的控制"}},[t._v("#")]),t._v(" white-space 与换行和空格的控制？")]),t._v(" "),s("p",[t._v("white-space 属性声明了如何处理元素内的空白字符，这类空白字符包括 Space（空格）键、Enter（回车）键、Tab（制表符）键产生的空白。因此，white-space 可以决定图文内容是否在一行显示（回车空格是否生效），是否显示大段连续空白（空格是否生效）等。")]),t._v(" "),s("p",[t._v("其属性值包括下面这些。")]),t._v(" "),s("ul",[s("li",[t._v("normal：合并空白字符和换行符。")]),t._v(" "),s("li",[t._v("pre：空白字符不合并，并且内容只在有换行符的地方换行。")]),t._v(" "),s("li",[t._v("nowrap：该值和 normal 一样会合并空白字符，但不允许文本环绕。")]),t._v(" "),s("li",[t._v("pre-wrap：空白字符不合并，并且内容只在有换行符的地方换行，同时允许文本环绕。")]),t._v(" "),s("li",[t._v("pre-line：合并空白字符，但只在有换行符的地方换行，允许文本环绕。")])]),t._v(" "),s("h2",{attrs:{id:"隐藏元素的-background-image-到底加不加载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#隐藏元素的-background-image-到底加不加载"}},[t._v("#")]),t._v(" 隐藏元素的 background-image 到底加不加载？")]),t._v(" "),s("p",[t._v("根据测试，一个元素如果 display 计算值为 none，在 IE 浏览器下（IE8 ～ IE11，更高版本不确定）依然会发送图片请求，Firefox 浏览器不会，至于 Chrome 和 Safari 浏览器则似乎更加智能一点：如果隐藏元素同时又设置了 background-image，则图片依然会去加载；如果是父元素的 display 计算值为 none，则背景图不会请求，此时浏览器或许放心地认为这个背景图暂时是不会使用的。")]),t._v(" "),s("p",[t._v("如果不是 background-image，而是"),s("code",[t._v("<img>")]),t._v("元素，则设置 display:none 在所有浏览器下依旧都会请求图片资源。")]),t._v(" "),s("p",[t._v("还需要注意的是如果设置的样式没有对应的元素，则 background-image 也不会加载。hover 情况下的 background-image，在触发时加载。")]),t._v(" "),s("p",[t._v("回答：")]),t._v(" "),s("p",[t._v("（1）元素的背景图片")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("元素本身设置 display:none，会请求图片")])]),t._v(" "),s("li",[s("p",[t._v("父级元素设置 display:none，不会请求图片")])]),t._v(" "),s("li",[s("p",[t._v("样式没有元素使用，不会请求")])]),t._v(" "),s("li",[s("p",[t._v("hover 样式下，触发时请求")])])]),t._v(" "),s("p",[t._v("（2）img 标签图片任何情况下都会请求图片")]),t._v(" "),s("h2",{attrs:{id:"你知道-css-中不同属性设置为百分比-时对应的计算基准"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#你知道-css-中不同属性设置为百分比-时对应的计算基准"}},[t._v("#")]),t._v(" 你知道 CSS 中不同属性设置为百分比%时对应的计算基准？")]),t._v(" "),s("p",[t._v("公式：当前元素某 CSS 属性值 = 基准 * 对应的百分比")]),t._v(" "),s("p",[t._v("元素的 position 为 relative 和 absolute 时，top 和 bottom、left 和 right 基准分别为包含块的 height、width")]),t._v(" "),s("p",[t._v("元素的 position 为 fixed 时，top 和 bottom、left 和 right 基准分别为初始包含块（也就是视口）的 height、width，移动设备较为复杂，基准为 Layout viewport 的 height、width")]),t._v(" "),s("p",[t._v("元素的 height 和 width 设置为百分比时，基准分别为包含块的 height 和 width")]),t._v(" "),s("p",[t._v("元素的 margin 和 padding 设置为百分比时，基准为包含块的 width（易错）")]),t._v(" "),s("p",[t._v("元素的 border-width，不支持百分比")]),t._v(" "),s("p",[t._v("元素的 text-indent，基准为包含块的 width")]),t._v(" "),s("p",[t._v("元素的 border-radius，基准为分别为自身的 height、width")]),t._v(" "),s("p",[t._v("元素的 background-size，基准为分别为自身的 height、width")]),t._v(" "),s("p",[t._v("元素的 translateX、translateY，基准为分别为自身的 height、width")]),t._v(" "),s("p",[t._v("元素的 line-height，基准为自身的 font-size")]),t._v(" "),s("p",[t._v("元素的 font-size，基准为父元素字体")])])}),[],!1,null,null,null);a.default=n.exports}}]);