(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{480:function(v,_,t){"use strict";t.r(_);var e=t(15),a=Object(e.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"这是老经典的题了-浏览器输入-url-后发生了什么事"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#这是老经典的题了-浏览器输入-url-后发生了什么事"}},[v._v("#")]),v._v(" 这是老经典的题了：浏览器输入 url 后发生了什么事")]),v._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#大致流程"}},[v._v("大致流程")])]),t("li",[t("a",{attrs:{href:"#分析每个流程"}},[v._v("分析每个流程")]),t("ul",[t("li",[t("a",{attrs:{href:"#用户输入-url"}},[v._v("用户输入 URL")])]),t("li",[t("a",{attrs:{href:"#url-请求过程"}},[v._v("URL 请求过程")])])])]),t("li",[t("a",{attrs:{href:"#参考"}},[v._v("参考")])])])]),t("p"),v._v(" "),t("p",[t("img",{attrs:{src:"https://blog-images-1302031947.cos.ap-guangzhou.myqcloud.com/images/image-20211112103143396.png",alt:"image-20211112103143396"}})]),v._v(" "),t("h2",{attrs:{id:"大致流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#大致流程"}},[v._v("#")]),v._v(" 大致流程")]),v._v(" "),t("ol",[t("li",[v._v("浏览器进程发出"),t("u",[v._v("URL 请求")]),v._v("给网络进程")]),v._v(" "),t("li",[v._v("网络进程接收到 URL 请求后，"),t("u",[v._v("发起网络请求")]),v._v("，然后服务器返回 HTTP 数据到网络进程，网络进程"),t("u",[v._v("解析 HTTP 响应头数据")]),v._v("，并将其"),t("u",[v._v("转发")]),v._v("给浏览器进程")]),v._v(" "),t("li",[v._v("浏览器进程接收到网络进程的响应头数据后，"),t("u",[v._v("发送 CommitNavigation 消息")]),v._v("到渲染进程，发送 CommitNavigation 时会"),t("u",[v._v("携带响应头等基本信息")]),v._v("。")]),v._v(" "),t("li",[v._v("渲染进程接收到 CommitNavigation 消息之后，便开始"),t("u",[v._v("准备接收 HTML 数据")]),v._v("，接收数据的方式是直接和网络进程建立"),t("u",[v._v("数据管道")])]),v._v(" "),t("li",[v._v("最后渲染进程会向浏览器进程“"),t("u",[v._v("确认提交")]),v._v("”，这是告诉浏览器进程，说我已经"),t("u",[v._v("准备好接收和解析页面数据")]),v._v("了")]),v._v(" "),t("li",[v._v("最后浏览器进程"),t("u",[v._v("更新页面状态")])])]),v._v(" "),t("h2",{attrs:{id:"分析每个流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分析每个流程"}},[v._v("#")]),v._v(" 分析每个流程")]),v._v(" "),t("h3",{attrs:{id:"用户输入-url"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#用户输入-url"}},[v._v("#")]),v._v(" 用户输入 URL")]),v._v(" "),t("p",[v._v("浏览器的地址栏会判断所输入的内容是"),t("u",[v._v("搜索")]),v._v("还是"),t("u",[v._v("网址")])]),v._v(" "),t("ul",[t("li",[t("p",[v._v("如果是搜索内容，就将搜索内容+默认搜索引擎合成新的 URL；")])]),v._v(" "),t("li",[t("p",[v._v("如果用户输入的内容符合 URL 规则，浏览器就会根据 URL 协议，在这段内容上加上协议合成合法的 URL，比如输入"),t("code",[v._v("www.baidu.com")]),v._v(" 地址栏会根据规则，把这段内容加上协议，合成完整的 URL，如"),t("code",[v._v("https://www.baidu.com")])])])]),v._v(" "),t("p",[v._v("补充：")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("用户输入完内容，按下回车键，浏览器导航栏显示"),t("u",[v._v("loading 状态")]),v._v("，但是页面还是呈现前一个页面，这是"),t("u",[v._v("因为新页面的响应数据还没有获得")]),v._v("。")])]),v._v(" "),t("li",[t("p",[v._v("这里面有个"),t("u",[v._v("beforeunload 事件")]),v._v("，该事件允许页面退出之前执行一些数据的"),t("u",[v._v("清理操作")]),v._v("，还可以询问用户是否要离开当前页面，比如当前页面有未提交的表单，用户可以通过 beforeunload 事件来取消导航，让浏览器不在进行后续工作。")])])]),v._v(" "),t("h3",{attrs:{id:"url-请求过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#url-请求过程"}},[v._v("#")]),v._v(" URL 请求过程")]),v._v(" "),t("ul",[t("li",[v._v("浏览器进程将构建请求行数据，进行"),t("u",[v._v("进程间通信（IPC）")]),v._v("将 URL 请求发送给网络进程，类似于下面这个：")])]),v._v(" "),t("div",{staticClass:"language-http line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-http"}},[t("code",[v._v("GET /index.html HTTP1.1\n")])]),v._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[v._v("1")]),t("br")])]),t("ul",[t("li",[t("p",[v._v("网络进程获取到 URL，先去"),t("u",[v._v("本地缓存")]),v._v("（也叫浏览器缓存，浏览器缓存是在磁盘中的）中查找是否有缓存文件（hosts 文件优先级比本地缓存高，"),t("u",[v._v("先查找 hosts 文件再看本地缓存")]),v._v("），如果有，拦截请求，直接 200 返回；否则，进入网络请求过程（具体看"),t("RouterLink",{attrs:{to:"/technology/computer-network/浏览器缓存.html"}},[v._v("浏览器缓存")]),v._v("）")],1)]),v._v(" "),t("li",[t("p",[v._v("网络进程向"),t("u",[v._v("本地 DNS 服务器")]),v._v("请求该域名对应的"),t("u",[v._v("IP 和端口号")]),v._v("，如果之前"),t("u",[v._v("DNS 数据缓存服务")]),v._v("缓存过当前域名信息，就会直接返回缓存信息；否则，发起请求获取根据域名解析出来的 IP 和端口号，如果没有端口号，"),t("u",[v._v("http 默认 80")]),v._v("，"),t("u",[v._v("https 默认 443")]),v._v("。如果是 https 请求，还需要建立"),t("u",[v._v("TLS 连接")]),v._v("。（具体看"),t("a",{attrs:{href:"./DNS%E8%A7%A3%E6%9E%90%E5%8E%9F%E7%90%86"}},[v._v("DNS 解析原理")]),v._v("）")])]),v._v(" "),t("li",[t("p",[v._v("在进程 TCP 连接的过程中，Chrome 有个机制，同一个域名下最多只能建立"),t("u",[v._v("6 个 TCP 连接")]),v._v("，如果在同一个域名下有 10 个请求发生，那么其中 4 个请求会进入等待转台，直至进行中的请求完成。如果请求个数小于 6，会直接建立 TCP 连接。")])]),v._v(" "),t("li",[t("p",[t("u",[v._v("TCP 三次握手建立连接")]),v._v("，http 请求"),t("u",[v._v("加上 TCP 头部")]),v._v("——包括"),t("u",[v._v("源端口号")]),v._v("、"),t("u",[v._v("目的程序端口号")]),v._v("和"),t("u",[v._v("用于校验数据完整性的序号")]),v._v("，向下传输。")])]),v._v(" "),t("li",[t("p",[t("u",[v._v("网络层")]),v._v("在数据包上"),t("u",[v._v("加上 IP 头部")]),v._v("——包括"),t("u",[v._v("源 IP 地址")]),v._v("和"),t("u",[v._v("目的 IP 地址")]),v._v("，继续向下传输到底层")])]),v._v(" "),t("li",[t("p",[v._v("底层通过"),t("u",[v._v("物理网络传输")]),v._v("给目的服务器主机，紧接着目的服务器主机网络层"),t("u",[v._v("接收到数据包")]),v._v("，"),t("u",[v._v("解析出 IP 头部")]),v._v("，识别出数据部分，将解开的数据包向上传输到传输层。")])]),v._v(" "),t("li",[t("p",[v._v("目的服务器主机传输层获取到数据包，"),t("u",[v._v("解析出 TCP 头部")]),v._v("，"),t("u",[v._v("识别端口")]),v._v("，将解开的数据包向上传输到应用层")])]),v._v(" "),t("li",[t("p",[v._v("应用层 HTTP"),t("u",[v._v("解析请求头和请求体")])]),v._v(" "),t("ul",[t("li",[v._v("如果需要重定向，HTTP 直接返回 HTTP 响应数据的状态 code301 或者 302，同时在请求头的 Location 字段中附上重定向地址，浏览器会根据 code 和 Location 进行重定向操作；")]),v._v(" "),t("li",[v._v("如果不是重定向，首先服务器会根据请求头中的 If-None-Match 的值来判断请求的资源是否被更新")]),v._v(" "),t("li",[v._v("如果没有更新，就返回 304 状态码，相当于告诉浏览器之前的缓存还可以使用，就不返回新数据了；")]),v._v(" "),t("li",[v._v("否则，返回新数据，200 的状态码，并且如果想要浏览器缓存数据的话，就在相应头中加入字段："),t("div",{staticClass:"language-http line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-http"}},[t("code",[t("span",{pre:!0,attrs:{class:"token header-name keyword"}},[v._v("Cache-Control:")]),v._v("Max-age=2000\n")])]),v._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[v._v("1")]),t("br")])])])])]),v._v(" "),t("li",[t("p",[v._v("响应数据又顺着应用层——传输层——网络层——网络层——传输层——应用层的顺序返回到网络进程")])]),v._v(" "),t("li",[t("p",[v._v("数据"),t("u",[v._v("传输完成")]),v._v("，TCP 四次挥手"),t("u",[v._v("断开连接")]),v._v("。如果，浏览器或者服务器在 HTTP 头部加上如下信息，TCP 就一直保持连接。保持 TCP 连接可以省下下次需要建立连接的时间，提高资源加载速度")]),v._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[v._v("\t```http\n\tConnection:Keep-Alive\n\t```\n")])])])]),v._v(" "),t("li",[t("p",[v._v("网络进程将获取到的数据包进行解析，根据响应头中的 Content-type 来"),t("u",[v._v("判断响应数据的类型")]),v._v("，如果是"),t("u",[v._v("字节流类型")]),v._v("，就将该请求"),t("u",[v._v("交给下载管理器")]),v._v("；如果是"),t("u",[v._v("text/html 类型")]),v._v("，就通知浏览器进程"),t("u",[v._v("获取文档准备渲染")])])])]),v._v(" "),t("p",[t("img",{attrs:{src:"https://blog-images-1302031947.cos.ap-guangzhou.myqcloud.com/images/image-20211112103153704.png",alt:"image-20211112103153704"}})]),v._v(" "),t("p",[t("img",{attrs:{src:"https://blog-images-1302031947.cos.ap-guangzhou.myqcloud.com/images/image-20211112103158988.png",alt:"image-20211112103158988"}})]),v._v(" "),t("ul",[t("li",[t("p",[v._v("从返回的响应头信息来看，其 Content-Type 的值是 application/octet-stream，显示数据是"),t("u",[v._v("字节流类型")]),v._v("的，通常情况下，浏览器会按照下载类型来处理该请求。需要注意的是，如果服务器配置 Content-Type 不正确，比如将 text/html 类型配置成 application/octet-stream 类型，那么浏览器可能会曲解文件内容，比如会将一个本来是用来展示的页面，变成了一个下载文件。")])]),v._v(" "),t("li",[t("p",[v._v("浏览器进程获取到通知，根据当前页面 B 是否是从页面 A 打开的并且和页面 A 是否是同一个站点（"),t("u",[v._v("根域名和协议一样")]),v._v("就被认为是同一个站点），如果满足上述条件，就"),t("u",[v._v("复用")]),v._v("之前网页的进程，否则，"),t("u",[v._v("新创建")]),v._v("一个单独的渲染进程。")])]),v._v(" "),t("li",[t("p",[v._v("浏览器会"),t("u",[v._v("发出“提交文档”的消息")]),v._v("给渲染进程，渲染进程收到消息后，会和网络进程"),t("u",[v._v("建立传输数据的“管道”")]),v._v("，文档数据传输完成后，渲染进程会"),t("u",[v._v("返回“确认提交”的消息")]),v._v("给浏览器进程。")])]),v._v(" "),t("li",[t("p",[v._v("浏览器"),t("u",[v._v("收到“确认提交”的消息")]),v._v("后，会"),t("u",[v._v("更新浏览器的页面状态")]),v._v("，包括了安全状态、地址栏的 URL、前进后退的历史状态，并更新 web 页面，此时的 web 页面是空白页。这也解释了为什么在浏览器的地址栏里面输入了一个地址后，之前的页面没有立马消失，而是要加载一会儿才会更新页面。")])])]),v._v(" "),t("p",[t("img",{attrs:{src:"https://blog-images-1302031947.cos.ap-guangzhou.myqcloud.com/images/image-20211112103204834.png",alt:"image-20211112103204834"}})]),v._v(" "),t("ul",[t("li",[v._v("渲染进程"),t("u",[v._v("对文档进行页面解析和子资源加载")]),v._v("，HTML 通过 HTML 解析器转成"),t("u",[v._v("DOM Tree")]),v._v("（二叉树类似结构的东西），CSS 按照 CSS 规则和 CSS 解释器转成"),t("u",[v._v("CSSOM Tree")]),v._v("，两个 tree 结合，形成"),t("u",[v._v("render tree")]),v._v("（不包含 HTML 的具体元素和元素要画的具体位置），通过 Layout 可以"),t("u",[v._v("计算")]),v._v("出每个元素具体的宽高颜色位置，结合起来，开始"),t("u",[v._v("绘制")]),v._v("，最后显示在屏幕中新页面显示出来。（具体看"),t("RouterLink",{attrs:{to:"/technology/computer-network/浏览器渲染原理.html"}},[v._v("浏览器渲染原理")]),v._v("）")],1)]),v._v(" "),t("h2",{attrs:{id:"参考"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[v._v("#")]),v._v(" 参考")]),v._v(" "),t("blockquote",[t("p",[t("a",{attrs:{href:"https://juejin.cn/post/6846687590540640263#heading-33",target:"_blank",rel:"noopener noreferrer"}},[v._v("「浏览器工作原理」写给女友的秘籍-浏览器组成&网络请求篇（1.2W 字)"),t("OutboundLink")],1)]),v._v(" "),t("p",[t("a",{attrs:{href:"https://segmentfault.com/a/1190000006879700",target:"_blank",rel:"noopener noreferrer"}},[v._v("从输入 URL 到页面加载发生了什么"),t("OutboundLink")],1)]),v._v(" "),t("p",[t("a",{attrs:{href:"https://time.geekbang.org/column/article/117637",target:"_blank",rel:"noopener noreferrer"}},[v._v("导航流程：从输入 URL 到页面展示，这中间发生了什么？"),t("OutboundLink")],1)]),v._v(" "),t("p",[t("a",{attrs:{href:"https://www.html5rocks.com/zh/tutorials/internals/howbrowserswork/#The_browsers_we_will_talk_about",target:"_blank",rel:"noopener noreferrer"}},[v._v("浏览器的工作原理：现代网络浏览器幕后揭秘"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);_.default=a.exports}}]);