(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{478:function(t,a,s){"use strict";s.r(a);var e=s(15),v=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"了解一下渲染原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#了解一下渲染原理"}},[t._v("#")]),t._v(" 了解一下渲染原理")]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#关键渲染路径"}},[t._v("关键渲染路径")])]),s("li",[s("a",{attrs:{href:"#dom-tree"}},[t._v("DOM Tree")]),s("ul",[s("li",[s("a",{attrs:{href:"#构建流程"}},[t._v("构建流程")])]),s("li",[s("a",{attrs:{href:"#词法分析-标记化"}},[t._v("词法分析（标记化）")])]),s("li",[s("a",{attrs:{href:"#语法分析-解析器"}},[t._v("语法分析（解析器）")])])])]),s("li",[s("a",{attrs:{href:"#cssom-tree"}},[t._v("CSSOM Tree")]),s("ul",[s("li",[s("a",{attrs:{href:"#样式计算"}},[t._v("样式计算")])]),s("li",[s("a",{attrs:{href:"#格式化样式表"}},[t._v("格式化样式表")])]),s("li",[s("a",{attrs:{href:"#标准化样式表"}},[t._v("标准化样式表")])]),s("li",[s("a",{attrs:{href:"#计算每个-dom-节点具体样式"}},[t._v("计算每个 DOM 节点具体样式")])])])]),s("li",[s("a",{attrs:{href:"#题外话-另一种说法-cssom"}},[t._v("（题外话）另一种说法 CSSOM")])]),s("li",[s("a",{attrs:{href:"#生成布局树"}},[t._v("生成布局树")]),s("ul",[s("li",[s("a",{attrs:{href:"#创建布局树"}},[t._v("创建布局树")])]),s("li",[s("a",{attrs:{href:"#布局计算"}},[t._v("布局计算")])]),s("li",[s("a",{attrs:{href:"#梳理前三个阶段"}},[t._v("梳理前三个阶段")])])])]),s("li",[s("a",{attrs:{href:"#分层"}},[t._v("分层")]),s("ul",[s("li",[s("a",{attrs:{href:"#生成图层树"}},[t._v("生成图层树")])]),s("li",[s("a",{attrs:{href:"#显式合成"}},[t._v("显式合成")]),s("ul",[s("li",[s("a",{attrs:{href:"#一、-拥有-层叠上下文-的节点。"}},[t._v("一、 拥有层叠上下文的节点。")])]),s("li",[s("a",{attrs:{href:"#二、需要-剪裁-clip-的地方。"}},[t._v("二、需要剪裁(clip)的地方。")])])])]),s("li",[s("a",{attrs:{href:"#隐式合成"}},[t._v("隐式合成")])])])]),s("li",[s("a",{attrs:{href:"#绘制"}},[t._v("绘制")])]),s("li",[s("a",{attrs:{href:"#分块"}},[t._v("分块")])]),s("li",[s("a",{attrs:{href:"#光栅化"}},[t._v("光栅化")])]),s("li",[s("a",{attrs:{href:"#合成和显示"}},[t._v("合成和显示")])]),s("li",[s("a",{attrs:{href:"#回流-重绘-合成"}},[t._v("回流-重绘-合成")]),s("ul",[s("li",[s("a",{attrs:{href:"#重排-回流-布局"}},[t._v("重排（回流/布局）")])]),s("li",[s("a",{attrs:{href:"#重绘"}},[t._v("重绘")])]),s("li",[s("a",{attrs:{href:"#flush-队列"}},[t._v("flush 队列")])]),s("li",[s("a",{attrs:{href:"#合成"}},[t._v("合成")])]),s("li",[s("a",{attrs:{href:"#gpu-加速原因"}},[t._v("GPU 加速原因")])])])]),s("li",[s("a",{attrs:{href:"#实践意义"}},[t._v("实践意义")])]),s("li",[s("a",{attrs:{href:"#面试知识点"}},[t._v("面试知识点")]),s("ul",[s("li",[s("a",{attrs:{href:"#load-和-domcontentloaded-区别"}},[t._v("Load 和 DOMContentLoaded 区别")])]),s("li",[s("a",{attrs:{href:"#图层-layer"}},[t._v("图层（Layer）")])]),s("li",[s("a",{attrs:{href:"#重绘-repaint-和回流-reflow"}},[t._v("重绘（Repaint）和回流（Reflow）")])]),s("li",[s("a",{attrs:{href:"#减少重绘和回流"}},[t._v("减少重绘和回流")])]),s("li",[s("a",{attrs:{href:"#行内样式和-cssstylesheet-的区别"}},[t._v("行内样式和 CSSStyleSheet 的区别")])])])]),s("li",[s("a",{attrs:{href:"#参考"}},[t._v("参考")])])])]),s("p"),t._v(" "),s("p",[t._v("浏览器的渲染原理大致都差不多，下面是 Chrome 浏览器的渲染流程")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://blog-images-1302031947.cos.ap-guangzhou.myqcloud.com/images/image-20211112103214132.png",alt:"image-20211112103214132"}})]),t._v(" "),s("h2",{attrs:{id:"关键渲染路径"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关键渲染路径"}},[t._v("#")]),t._v(" 关键渲染路径")]),t._v(" "),s("blockquote",[s("p",[t._v("关键渲染路径指的是浏览器将"),s("code",[t._v("HTML")]),t._v("，"),s("code",[t._v("CSS")]),t._v("，"),s("code",[t._v("JS")]),t._v("转化为实际运作的网站的必须采取的一系列步骤")])]),t._v(" "),s("ol",[s("li",[t._v("渲染进程的"),s("u",[t._v("主线程")]),t._v("处理 HTML 并构建 "),s("u",[t._v("DOM Tree(文档对象模型树)")])]),t._v(" "),s("li",[t._v("接下来处理 "),s("code",[t._v("CSS")]),t._v(" 并构建"),s("u",[s("code",[t._v("CSSOM Tree")]),t._v("(CSS 对象模型树)")])]),t._v(" "),s("li",[t._v("浏览器的布局系统根据 "),s("code",[t._v("DOM Tree")]),t._v(" 和 "),s("code",[t._v("CSSOM Tree")]),t._v(" 生成 "),s("u",[t._v("（布局树）"),s("code",[t._v("Layout Tree")])]),t._v("（以前叫 Render Object Tree）")]),t._v(" "),s("li",[t._v("构建"),s("u",[t._v("（图层树） Layer Tree")]),t._v(" 以便用正确的顺序展示页面，这棵树的生成与 "),s("code",[t._v("Layout Tree")]),t._v(" 的构建"),s("u",[t._v("同步进行")])]),t._v(" "),s("li",[t._v("生成"),s("u",[t._v("绘制列表")]),t._v("，渲染进程中的"),s("u",[t._v("主线程")]),t._v(" 给 "),s("u",[t._v("合成线程")]),t._v("发送 commit 消息，把绘制列表"),s("u",[t._v("交给合成线程")])]),t._v(" "),s("li",[t._v("合成线程会根据绘制列表"),s("u",[t._v("绘制图层")])])]),t._v(" "),s("p",[t._v("较为专业的术语")]),t._v(" "),s("ol",[s("li",[t._v("构建 DOM 树（DOM Tree）")]),t._v(" "),s("li",[t._v("样式计算（CSSOM Tree）")]),t._v(" "),s("li",[t._v("布局阶段（Layout Tree）")]),t._v(" "),s("li",[t._v("分层（Layer Tree）")]),t._v(" "),s("li",[t._v("绘制（Paint）")]),t._v(" "),s("li",[t._v("分块（Tile）")]),t._v(" "),s("li",[t._v("光栅化")]),t._v(" "),s("li",[t._v("合成")])]),t._v(" "),s("p",[t._v("想象一下，从 0，1 字节流到最后页面展现在你面前，这里面渲染机制肯定很复杂，所以渲染模块把执行过程中化为很多的子阶段，渲染引擎从网络进程拿到"),s("u",[t._v("字节流数据")]),t._v("后，经过这些子阶段的处理，最后输出像素，这个过程可以称为渲染流水线 ，我们从一张图上来看")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://blog-images-1302031947.cos.ap-guangzhou.myqcloud.com/images/image-20211112103219819.png",alt:"image-20211112103219819"}})]),t._v(" "),s("h2",{attrs:{id:"dom-tree"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dom-tree"}},[t._v("#")]),t._v(" DOM Tree")]),t._v(" "),s("blockquote",[s("p",[t._v("DOM（Document Object Model——文档对象模型）是用来呈现以及与任意 HTML 或 XML 交互的 API 文档。DOM 是载入到浏览器中的文档模型，它用节点树的形式来表现文档，每个节点代表文档的构成部分。")])]),t._v(" "),s("p",[t._v("需要说明的是 DOM 只是构建了文档标记的"),s("u",[t._v("属性和关系")]),t._v("，并没有说明元素需要呈现的样式，这需要 CSSOM 来处理。")]),t._v(" "),s("h3",{attrs:{id:"构建流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构建流程"}},[t._v("#")]),t._v(" 构建流程")]),t._v(" "),s("p",[t._v("获取到 HTML 字节数据后，会通过以下流程构建 DOM Tree：")]),t._v(" "),s("p",[s("u",[t._v("字节 → 字符 → 令牌 → 节点 → 对象模型(DOM)")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("html"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("head"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("meta name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"viewport"')]),t._v(" content"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"width=device-width,initial-scale=1"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("link href"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"style.css"')]),t._v(" rel"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stylesheet"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("title"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Critical Path"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("title"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("head"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("body"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("Hello "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("span"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("web performance"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("span"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" students"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("p"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("img src"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"awesome-photo.jpg"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("body"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("html"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("p",[s("img",{attrs:{src:"https://blog-images-1302031947.cos.ap-guangzhou.myqcloud.com/images/image-20211112103224957.png",alt:"image-20211112103224957"}})]),t._v(" "),s("ol",[s("li",[t._v("编码：浏览器从"),s("u",[t._v("磁盘或网络")]),t._v("读取 HTML 的"),s("u",[t._v("原始字节")]),t._v("，并根据文件的指定编码（例如 UTF-8）将它们"),s("u",[t._v("转换成各个字符")]),t._v("。")]),t._v(" "),s("li",[t._v("词法分析（标记化）：浏览器对输入字符串进行"),s("u",[t._v("逐字扫描")]),t._v("，根据 "),s("u",[t._v("构词规则")]),t._v(" 识别单词和符号，分割成一个个我们可以理解的词汇（学名叫 "),s("u",[t._v("Token")]),t._v(" ）的过程。")]),t._v(" "),s("li",[t._v("语法分析（解析器）：对 Tokens 应用 HTML 的"),s("u",[t._v("语法规则")]),t._v("，进行"),s("u",[t._v("配对标记")]),t._v("、"),s("u",[t._v("确立节点关系")]),t._v("和"),s("u",[t._v("绑定属性")]),t._v("等操作，从而构建 DOM Tree 的过程。")])]),t._v(" "),s("p",[t._v("词法分析和语法分析在每次处理 HTML 字符串时都会执行这个过程，比如使用 document.write 方法。")]),t._v(" "),s("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://blog-images-1302031947.cos.ap-guangzhou.myqcloud.com/images/image-20201209230559302.png",alt:"image-20201209230559302"}}),t._v(" "),s("h3",{attrs:{id:"词法分析-标记化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#词法分析-标记化"}},[t._v("#")]),t._v(" 词法分析（标记化）")]),t._v(" "),s("p",[t._v("HTML 结构不算太复杂，大部分情况下识别的标记会有开始标记、内容标记和结束标记，对应一个 HTML 元素。除此之外还有 DOCTYPE、Comment、EndOfFile 等标记。")]),t._v(" "),s("p",[t._v("标记化是通过"),s("u",[t._v("状态机")]),t._v("来实现的，状态机模型在 W3C 中已经定义好了。")]),t._v(" "),s("p",[t._v("想要得到一个标记，必须要经历一些状态，才能完成解析。我们通过一个简单的例子来了解一下流程。")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("www.w3c.org"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("W3C"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("img",{attrs:{src:"https://blog-images-1302031947.cos.ap-guangzhou.myqcloud.com/images/image-20201209230619688.png",alt:"image-20201209230619688"}})]),t._v(" "),s("ul",[s("li",[t._v("开始标记：")]),t._v(" "),s("li",[t._v("Data state：碰到 "),s("strong",[t._v("<")]),t._v("，进入 Tag open state")]),t._v(" "),s("li",[t._v("Tag open state：碰到 "),s("strong",[t._v("a")]),t._v("，进入 Tag name state 状态")]),t._v(" "),s("li",[t._v("Tag name state：碰到 "),s("strong",[t._v("空格")]),t._v("，进入 Before attribute name state")]),t._v(" "),s("li",[t._v("Before attribute name state：碰到 "),s("strong",[t._v("h")]),t._v("，进入 Attribute name state")]),t._v(" "),s("li",[t._v("Attribute name state：碰到 "),s("strong",[t._v("=")]),t._v("，进入 Before attribute value state")]),t._v(" "),s("li",[t._v("Before attribute value state：碰到 "),s("strong",[t._v('"')]),t._v("，进入 Attribute value (double-quoted) state")]),t._v(" "),s("li",[t._v("Attribute value (double-quoted) state：碰到 "),s("strong",[t._v("w")]),t._v("，保持当前状态")]),t._v(" "),s("li",[t._v("Attribute value (double-quoted) state：碰到 "),s("strong",[t._v('"')]),t._v("，进入 After attribute value (quoted) state")]),t._v(" "),s("li",[t._v("After attribute value (quoted) state：碰到 "),s("strong",[t._v(">")]),t._v("，进入 Data state，完成解析")]),t._v(" "),s("li",[t._v("内容标记：W3C")]),t._v(" "),s("li",[t._v("Data state：碰到 "),s("strong",[t._v("W")]),t._v("，保持当前状态，提取内容")]),t._v(" "),s("li",[t._v("Data state：碰到 "),s("strong",[t._v("<")]),t._v("，进入 Tag open state，完成解析")]),t._v(" "),s("li",[t._v("结束标记：")]),t._v(" "),s("li",[t._v("Tag open state：碰到 "),s("strong",[t._v("/")]),t._v("，进入 End tag open state")]),t._v(" "),s("li",[t._v("End tag open state：碰到 "),s("strong",[t._v("a")]),t._v("，进入 Tag name state")]),t._v(" "),s("li",[t._v("Tag name state：碰到 "),s("strong",[t._v(">")]),t._v("，进入 Data state，完成解析")])]),t._v(" "),s("p",[t._v("通过上面这个例子，可以发现属性是"),s("strong",[t._v("开始标记")]),t._v("的一部分。")]),t._v(" "),s("h3",{attrs:{id:"语法分析-解析器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语法分析-解析器"}},[t._v("#")]),t._v(" 语法分析（解析器）")]),t._v(" "),s("p",[t._v("在创建解析器后，会关联一个 Document 对象作为"),s("u",[t._v("根节点")]),t._v("。")]),t._v(" "),s("p",[t._v("我会简单介绍一下流程，具体的实现过程可以在 Tree construction 查看。")]),t._v(" "),s("p",[t._v("解析器在运行过程中，会对 Tokens 进行迭代；并根据当前 Token 的类型转换到对应的模式，再在当前模式下处理 Token；此时，如果 Token 是一个开始标记，就会创建对应的元素，添加到 DOM Tree 中，并压入还未遇到结束标记的开始标记栈中；此栈的主要目的是实现浏览器的容错机制，纠正嵌套错误，具体的策略在 W3C 中定义。更多标记的处理可以在 状态机算法中查看。")]),t._v(" "),s("h2",{attrs:{id:"cssom-tree"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cssom-tree"}},[t._v("#")]),t._v(" CSSOM Tree")]),t._v(" "),s("h3",{attrs:{id:"样式计算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#样式计算"}},[t._v("#")]),t._v(" 样式计算")]),t._v(" "),s("p",[t._v("这个子阶段主要有三个步骤")]),t._v(" "),s("ul",[s("li",[s("u",[t._v("格式化")]),t._v("样式表")]),t._v(" "),s("li",[s("u",[t._v("标准化")]),t._v("样式表")]),t._v(" "),s("li",[s("u",[t._v("计算")]),t._v("每个 DOM 节点具体样式")])]),t._v(" "),s("h3",{attrs:{id:"格式化样式表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#格式化样式表"}},[t._v("#")]),t._v(" 格式化样式表")]),t._v(" "),s("p",[t._v("我们拿到的也就是 0，1 字节流数据，浏览器无法直接去识别的，所以渲染引擎收到 CSS 文本数据后，会执行一个操作，转换为浏览器可以理解的结构-"),s("code",[t._v("styleSheets")])]),t._v(" "),s("p",[t._v("如果你很想了解这个格式化的过程，可以好好去研究下，不同的浏览器可能在 CSS 格式化过程中会有所不同，在这里就不展开篇幅了。")]),t._v(" "),s("p",[t._v("通过浏览器的控制台"),s("code",[t._v("document.styleSheets")]),t._v("可以来查看这个最终结果。"),s("u",[t._v("通过 JavaScript 可以完成查询和修改功能")]),t._v(",或者说这个阶段为后面的样式操作提供基石。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://blog-images-1302031947.cos.ap-guangzhou.myqcloud.com/images/image-20201210150959740.png",alt:"image-20201210150959740"}})]),t._v(" "),s("h3",{attrs:{id:"标准化样式表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#标准化样式表"}},[t._v("#")]),t._v(" 标准化样式表")]),t._v(" "),s("p",[t._v("什么是标准化样式表呢?先看一段 CSS 文本 👇")]),t._v(" "),s("div",{staticClass:"language-css line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("body")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2em"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" blue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("span")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" none"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-weight")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" bold"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" green"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br")])]),s("p",[t._v("有些时候，我们写 CSS 样式的时候，会写"),s("code",[t._v("font-size:2em;color:red;font-weight:bold")]),t._v(",像这些数值并不容易被渲染引擎所理解，因此需要在计算样式之前将它们标准化，如"),s("code",[t._v("em")]),t._v("->"),s("code",[t._v("px")]),t._v(","),s("code",[t._v("red")]),t._v("->"),s("code",[t._v("rgba(255,0,0,0)")]),t._v(","),s("code",[t._v("bold")]),t._v("->"),s("code",[t._v("700")]),t._v("等等。")]),t._v(" "),s("p",[t._v("上面的代码标准后属性值是什么样子呢")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://blog-images-1302031947.cos.ap-guangzhou.myqcloud.com/images/image-20211112103249771.png",alt:"image-20211112103249771"}})]),t._v(" "),s("h3",{attrs:{id:"计算每个-dom-节点具体样式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#计算每个-dom-节点具体样式"}},[t._v("#")]),t._v(" 计算每个 DOM 节点具体样式")]),t._v(" "),s("p",[t._v("通过"),s("u",[t._v("格式化")]),t._v("和"),s("u",[t._v("标准化")]),t._v("，接下来就是计算每个节点具体样式信息了。")]),t._v(" "),s("p",[t._v("计算规则："),s("u",[t._v("继承")]),t._v("和"),s("u",[t._v("层叠")])]),t._v(" "),s("p",[t._v("继承：每个子节点会默认去继承父节点的样式，如果父节点中找不到，就会采用浏览器默认的样式，也叫"),s("code",[t._v("UserAgent样式")]),t._v("。")]),t._v(" "),s("p",[t._v("层叠：样式层叠，是 CSS 一个基本特征，它定义如何合并来自多个源的属性值的算法。某种意义上，它处于核心地位，具体的层叠规则属于深入 CSS 语言的范畴，这里就补展开篇幅说了。")]),t._v(" "),s("p",[t._v("不过值得注意的是，在计算完样式之后，所有的样式值会被挂在到"),s("code",[t._v("window.getComputedStyle")]),t._v("当中，也就是可以"),s("strong",[t._v("通过 JS 来获取计算后的样式")]),t._v("，非常方便。")]),t._v(" "),s("p",[t._v("这个阶段，完成了 DOM 节点中每个元素的具体样式，计算过程中要遵循 CSS 的"),s("code",[t._v("继承")]),t._v("和"),s("code",[t._v("层叠")]),t._v("两条规则，最终输出的内容是每个节点 DOM 的样式，被保存在 ComputedStyle 中。")]),t._v(" "),s("p",[t._v("想了解每个 DOM 元素最终的计算样式，可以打开 Chrome 的“开发者工具”，选择第一个“element”标签，选择 div 标签，然后再选择“Computed”子标签")]),t._v(" "),s("h2",{attrs:{id:"题外话-另一种说法-cssom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#题外话-另一种说法-cssom"}},[t._v("#")]),t._v(" （题外话）另一种说法 CSSOM")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://blog-images-1302031947.cos.ap-guangzhou.myqcloud.com/images/image-20211112103255390.png",alt:"image-20211112103255390"}})]),t._v(" "),s("p",[t._v("跟处理 HTML 一样，我们需要更具 CSS 两个规则："),s("u",[t._v("继承")]),t._v("和"),s("u",[t._v("层叠")]),t._v("转换成某种浏览器能理解和处理的东西，处理过程类似处理 HTML，如上图 ☝")]),t._v(" "),s("p",[t._v("CSS 字节转换成字符，接着转换成令牌和节点，最后链接到一个称为“CSS 对象模型”(CSSOM) 的树结构内")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://blog-images-1302031947.cos.ap-guangzhou.myqcloud.com/images/image-20211112103300000.png",alt:"image-20211112103300000"}})]),t._v(" "),s("p",[t._v("很多人肯定看这个很熟悉，确实，很多博客都是基于 CSSOM 说法来讲的，我要说的是：")]),t._v(" "),s("p",[s("strong",[t._v("和 DOM 不一样，源码中并没有 CSSOM 这个词，所以很多文章说的 CSSOM 应该就是 styleSheets")]),t._v("，当然了这个 styleSheets 我们可以打印出来的")]),t._v(" "),s("p",[s("strong",[t._v("很多文章说法是渲染树也是 16 年前的说法，现在代码重构了，我们可以把 LayoutTree 看成是渲染树，不过它们之间还是有些区别的。")])]),t._v(" "),s("h2",{attrs:{id:"生成布局树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生成布局树"}},[t._v("#")]),t._v(" 生成布局树")]),t._v(" "),s("p",[t._v("上述过程已经完成 DOM 树（DOM 树）构建，以及样式计算（DOM 样式），接下来就是要通过浏览器的"),s("u",[t._v("布局系统")]),t._v("确定"),s("strong",[t._v("元素位置")]),t._v("，也就是生成一颗布局树（Layout Tree）,之前说法叫 "),s("strong",[t._v("渲染树")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"创建布局树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建布局树"}},[t._v("#")]),t._v(" 创建布局树")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("在 DOM 树上不可见的元素，head 元素，meta 元素等，以及使用 display:none 属性的元素，最后都"),s("u",[t._v("不会出现")]),t._v("在布局树上，所以"),s("strong",[t._v("浏览器布局系统需要额外去构建一棵只包含"),s("u",[t._v("可见元素布局树")]),t._v("。")])])]),t._v(" "),s("li",[s("p",[t._v("我们直接结合图来看看这个布局树构建过程：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://blog-images-1302031947.cos.ap-guangzhou.myqcloud.com/images/image-20211112103309669.png",alt:"image-20211112103309669"}})])]),t._v(" "),s("li",[s("p",[t._v("为了构建布局树，浏览器布局系统大体上完成了下面这些工作：")])])]),t._v(" "),s("ul",[s("li",[t._v("遍历 DOM 树可见节点，并把这些节点加到布局树中")]),t._v(" "),s("li",[t._v("对于不可见的节点，head,meta 标签等都会被忽略。对于 body.p.span 这个元素，它的属性包含 display:none,所以这个元素没有被包含进布局树。")])]),t._v(" "),s("h3",{attrs:{id:"布局计算"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#布局计算"}},[t._v("#")]),t._v(" 布局计算")]),t._v(" "),s("p",[t._v("接下来就是要计算布局树节点的坐标位置，布局的计算过程非常复杂，张开介绍的话，会显得文章过于臃肿，大多数情况下，我们只需要知道"),s("strong",[t._v("它所做的工作是什么")]),t._v("，想知道它是如何做的话，可以看看以下两篇文章 👇")]),t._v(" "),s("blockquote",[s("p",[s("a",{attrs:{href:"https://www.rrfed.com/2017/02/26/chrome-layout/",target:"_blank",rel:"noopener noreferrer"}},[t._v("人人 FED 团队的文章-从 Chrome 源码看浏览器如何 layout 布局"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/25445527?refer=dreawer",target:"_blank",rel:"noopener noreferrer"}},[t._v("从 Chrome 源码看浏览器如何 layout 布局"),s("OutboundLink")],1)])]),t._v(" "),s("h3",{attrs:{id:"梳理前三个阶段"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#梳理前三个阶段"}},[t._v("#")]),t._v(" 梳理前三个阶段")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://blog-images-1302031947.cos.ap-guangzhou.myqcloud.com/images/image-20211112103316625.png",alt:"image-20211112103316625"}})]),t._v(" "),s("h2",{attrs:{id:"分层"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分层"}},[t._v("#")]),t._v(" 分层")]),t._v(" "),s("ul",[s("li",[t._v("生成图层树（Layer Tree）")]),t._v(" "),s("li",[t._v("拥有"),s("u",[t._v("层叠上下文")]),t._v("属性的元素会被提升为单独一层")]),t._v(" "),s("li",[t._v("需要"),s("u",[t._v("裁剪（clip）")]),t._v("的地方也会创建图层")]),t._v(" "),s("li",[t._v("图层绘制")])]),t._v(" "),s("p",[t._v("首先需要知道的就是，浏览器在构建完"),s("code",[t._v("布局树")]),t._v("后，还需要进行一系列操作，这样子可能考虑到一些复杂的场景，比如一些些复杂的 3D 变换、页面滚动，或者使用 z-indexing 做 z 轴排序等，还有比如是含有层叠上下文如何控制显示和隐藏等情况。")]),t._v(" "),s("h3",{attrs:{id:"生成图层树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生成图层树"}},[t._v("#")]),t._v(" "),s("strong",[t._v("生成图层树")])]),t._v(" "),s("p",[t._v("你最终看到的页面，就是由这些图层一起叠加构成的，它们按照一定的顺序叠加在一起，就形成了最终的页面。")]),t._v(" "),s("p",[s("strong",[t._v("浏览器的页面实际上被分成了很多图层，这些图层叠加后合成了最终的页面。")])]),t._v(" "),s("p",[t._v("我们来看看图层与布局树之间关系，如下图 👇")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://blog-images-1302031947.cos.ap-guangzhou.myqcloud.com/images/image-20211112103324645.png",alt:"image-20211112103324645"}})]),t._v(" "),s("p",[t._v("通常情况下，"),s("strong",[s("u",[t._v("并不是布局树的每个节点都包含一个图层")]),t._v("，如果一个节点没有对应的层，那么这个节点就从属于父节点的图层。")])]),t._v(" "),s("p",[s("strong",[s("u",[t._v("那什么情况下，渲染引擎会为特定的节点创建新图层呢？")])])]),t._v(" "),s("p",[t._v("有两种情况需要分别讨论，一种是"),s("strong",[t._v("显式合成")]),t._v("，一种是"),s("strong",[t._v("隐式合成")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"显式合成"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#显式合成"}},[t._v("#")]),t._v(" "),s("strong",[t._v("显式合成")])]),t._v(" "),s("h4",{attrs:{id:"一、-拥有层叠上下文的节点。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、-拥有层叠上下文的节点。"}},[t._v("#")]),t._v(" 一、 拥有"),s("strong",[t._v("层叠上下文")]),t._v("的节点。")]),t._v(" "),s("p",[t._v("层叠上下文也基本上是有一些特定的 CSS 属性创建的，一般有以下情况:")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("HTML"),s("u",[t._v("根元素")]),t._v("，"),s("u",[t._v("Canvas")]),t._v("，"),s("u",[t._v("Video")]),t._v("，"),s("u",[t._v("Document")]),t._v("元素本身就具有层叠上下文，")])]),t._v(" "),s("li",[s("p",[t._v("普通元素设置"),s("u",[s("strong",[t._v("position 不为 static")]),t._v("并且"),s("strong",[t._v("设置了 z-index 属性")])]),t._v("，会产生层叠上下文。")])]),t._v(" "),s("li",[s("p",[t._v("元素的 "),s("u",[s("strong",[t._v("transform")]),t._v(" 值不是 none")])])]),t._v(" "),s("li",[s("p",[t._v("元素的 "),s("u",[s("strong",[t._v("isolation")]),t._v(" 值是 isolate")])])]),t._v(" "),s("li",[s("p",[t._v("**"),s("u",[t._v("will-change")]),t._v("**指定的属性值为上面任意一个。(will-change 的作用后面会详细介绍)")])]),t._v(" "),s("li",[s("p",[t._v("隐藏背面（"),s("strong",[s("u",[t._v("backface-visibility: hidden")])]),t._v("）")])]),t._v(" "),s("li",[s("p",[t._v("倒影（"),s("u",[t._v("box-reflect")]),t._v("）")])]),t._v(" "),s("li",[s("p",[s("u",[t._v("column-count（不为 auto）")]),t._v("或者"),s("u",[t._v("column-widthZ（不为 auto）")])])]),t._v(" "),s("li",[s("p",[t._v("透明的"),s("u",[t._v("（opacity 小于 1）")]),t._v("、滤镜（"),s("u",[t._v("filter")]),t._v("）、遮罩（"),s("u",[t._v("mask")]),t._v("）、混合模式（"),s("u",[t._v("mix-blend-mode 不为 normal")]),t._v("）")])]),t._v(" "),s("li",[s("p",[t._v("对不透明度（opacity）、变换（transform）、滤镜（filter）"),s("u",[t._v("应用动画")])])]),t._v(" "),s("li",[s("p",[s("u",[t._v("OverflowClipLayer")])])]),t._v(" "),s("li",[s("p",[t._v("剪切溢出内容（"),s("u",[t._v("overflow: hidden")]),t._v("）")])]),t._v(" "),s("li",[s("p",[t._v("剪切路径（"),s("u",[t._v("clip-path")]),t._v("）")])])]),t._v(" "),s("h4",{attrs:{id:"二、需要剪裁-clip-的地方。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、需要剪裁-clip-的地方。"}},[t._v("#")]),t._v(" 二、需要"),s("strong",[t._v("剪裁")]),t._v("(clip)的地方。")]),t._v(" "),s("p",[t._v("比如一个标签很小，50*50 像素，你在里面放了非常多的文字，那么超出的文字部分就需要被剪裁。当然如果出现了滚动条，那么滚动条也会被单独提升为一个图层，如下图")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://blog-images-1302031947.cos.ap-guangzhou.myqcloud.com/images/image-20211112103337940.png",alt:"image-20211112103337940"}})]),t._v(" "),s("p",[t._v("数字 1 箭头指向的地方，可以看看，可能效果不是很明显，大家可以自己打开这个 Layers 探索下。")]),t._v(" "),s("p",[s("strong",[t._v("元素有了层叠上下文的属性或者需要被剪裁，满足其中任意一点，就会被提升成为单独一层。")])]),t._v(" "),s("h3",{attrs:{id:"隐式合成"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#隐式合成"}},[t._v("#")]),t._v(" "),s("strong",[t._v("隐式合成")])]),t._v(" "),s("p",[t._v("这是一种什么样的情况呢，通俗意义上来说，就是"),s("code",[t._v("z-index")]),t._v("比较低的节点会提升为一个单独的途图层，那么"),s("u",[t._v("层叠等级比它高")]),t._v("的节点**"),s("u",[t._v("都会")]),t._v("**成为一个独立的图层。")]),t._v(" "),s("blockquote",[s("p",[s("a",{attrs:{href:"https://segmentfault.com/a/1190000014520786",target:"_blank",rel:"noopener noreferrer"}},[t._v("浏览器渲染流程&Composite（渲染层合并）简单总结"),s("OutboundLink")],1)])]),t._v(" "),s("p",[s("strong",[t._v("缺点：")]),t._v(" 根据上面的文章来说，在一个大型的项目中，一个"),s("code",[t._v("z-index")]),t._v("比较低的节点被提升为单独图层后，层叠在它上面的元素统统都会提升为单独的图层，我们知道，上千个图层，会增大内存的压力，有时候会让页面崩溃。这就是"),s("u",[t._v("层爆炸")])]),t._v(" "),s("h2",{attrs:{id:"绘制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#绘制"}},[t._v("#")]),t._v(" 绘制")]),t._v(" "),s("p",[t._v("完成了图层的构建，接下来要做的工作就是图层的绘制了。图层的绘制跟我们日常的绘制一样，每次都会把一个复杂的图层拆分为很小的**"),s("u",[t._v("绘制指令")]),s("strong",[t._v("，然后再按照这些指令的顺序组成一个")]),s("u",[t._v("绘制列表")]),t._v("**，类似于下图 👇")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://blog-images-1302031947.cos.ap-guangzhou.myqcloud.com/images/image-20211112103343436.png",alt:"image-20211112103343436"}})]),t._v(" "),s("p",[t._v("从图中可以看出，绘制列表中的指令其实非常简单，就是让其执行一个简单的绘制操作，比如绘制粉色矩形或者黑色的线等。而绘制一个元素通常需要好几条绘制指令，因为每个元素的背景、前景、边框都需要单独的指令去绘制。")]),t._v(" "),s("p",[t._v("大家可以在 Chrome 开发者工具中在设置栏中展开 "),s("code",[t._v("more tools")]),t._v(", 然后选择"),s("code",[t._v("Layers")]),t._v("面板，就能看到下面的绘制列表:")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://blog-images-1302031947.cos.ap-guangzhou.myqcloud.com/images/image-20211112103405779.png",alt:"image-20211112103405779"}})]),t._v(" "),s("p",[t._v("在该图中，**箭头 2 指向的区域 **就是 document 的绘制列表，**箭头 3 指向的拖动区域 **中的进度条可以重现列表的绘制过程。")]),t._v(" "),s("p",[t._v("当然了，绘制图层的操作在渲染进程中有着专门的线程，这个线程叫做"),s("u",[t._v("合成线程")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"分块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分块"}},[t._v("#")]),t._v(" 分块")]),t._v(" "),s("ul",[s("li",[t._v("接下来我们就要开始绘制操作了，实际上在渲染进程中绘制操作是由专门的线程来完成的，这个线程叫"),s("strong",[t._v("合成线程")]),t._v("。")]),t._v(" "),s("li",[t._v("绘制列表准备好了之后，渲染进程的主线程会给"),s("u",[t._v("合成线程")]),t._v("发送"),s("code",[t._v("commit")]),t._v("消息，把绘制列表提交给合成线程。接下来就是合成线程一展宏图的时候啦。")])]),t._v(" "),s("blockquote",[s("p",[t._v("你想呀，有时候，你的图层很大，或者说你的页面需要使用滚动条，然后页面的内容太多，多的无法想象，这个时候需要滚动好久才能滚动到底部，但是通过视口，用户只能看到页面的很小一部分，所以在这种情况下，要绘制出所有图层内容的话，就会产生太大的开销，而且也没有必要。")])]),t._v(" "),s("ul",[s("li",[t._v("基于上面的原因，合成线程会讲图层划分为"),s("u",[t._v("图块(tile)")])]),t._v(" "),s("li",[t._v("这些块的大小一般不会特别大，通常是 256 _ 256 或者 512 _ 512 这个规格。这样可以大大"),s("u",[t._v("加速页面的首屏展示")]),t._v("。")])]),t._v(" "),s("p",[t._v("首屏渲染加速可以这么理解：")]),t._v(" "),s("blockquote",[s("p",[t._v("因为后面图块（非视口内的图块）数据要进入 GPU 内存，考虑到浏览器内存上传到 GPU 内存的操作比较慢，即使是绘制一部分图块，也可能会耗费大量时间。针对这个问题，Chrome 采用了一个策略: 在首次合成图块时只采用一个**"),s("u",[t._v("低分辨率")]),t._v("**的图片，这样首屏展示的时候只是展示出低分辨率的图片，这个时候继续进行合成操作，当正常的图块内容绘制完毕后，会将当前低分辨率的图块内容"),s("u",[t._v("替换")]),t._v("。这也是 Chrome 底层"),s("u",[t._v("优化首屏加载速度")]),t._v("的一个手段。")])]),t._v(" "),s("h2",{attrs:{id:"光栅化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#光栅化"}},[t._v("#")]),t._v(" 光栅化")]),t._v(" "),s("p",[t._v("接着上面的步骤，有了图块之后，"),s("strong",[t._v("合成线程会按照"),s("u",[t._v("视口附近的图块")]),t._v("来"),s("u",[t._v("优先生成位图")]),t._v("，实际生成位图的操作是由"),s("u",[t._v("栅格化")]),t._v("来执行的。所谓栅格化，是指将"),s("u",[t._v("图块转换为位图")]),t._v("。")])]),t._v(" "),s("ul",[s("li",[s("u",[t._v("图块")]),t._v("是栅格化执行的最小单位")]),t._v(" "),s("li",[t._v("渲染进程中专门维护了一个**"),s("u",[t._v("栅格化线程池")]),s("strong",[t._v("，专门负责把")]),s("u",[t._v("图块"),s("strong",[t._v("转换为")]),t._v("位图数据")]),t._v("**")]),t._v(" "),s("li",[t._v("合成线程会"),s("u",[t._v("选择视口附近的"),s("strong",[t._v("图块(tile)")])]),t._v("，把它交给"),s("strong",[t._v("栅格化线程池")]),s("u",[t._v("生成位图")])]),t._v(" "),s("li",[t._v("生成位图的过程实际上都会使用 "),s("u",[t._v("GPU")]),t._v(" 进行加速，生成的位图最后"),s("u",[t._v("发送给合成线程")])])]),t._v(" "),s("p",[t._v("运行方式如下 👇")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://blog-images-1302031947.cos.ap-guangzhou.myqcloud.com/images/image-20211112103414603.png",alt:"image-20211112103414603"}})]),t._v(" "),s("p",[t._v("通常，栅格化过程都会使用 GPU 来加速生成，使用 GPU 生成位图的过程叫**"),s("u",[t._v("快速栅格化")]),t._v("**，或者 GPU 栅格化，生成的位图被"),s("u",[t._v("保存在 GPU 内存")]),t._v("中。")]),t._v(" "),s("p",[t._v("相信你还记得，GPU 操作是运行在 "),s("u",[t._v("GPU 进程")]),t._v("中，如果栅格化操作使用了 GPU，那么最终生成位图的操作是在 GPU 中完成的，这就涉及到了跨进程操作。具体形式你可以参考下图：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://blog-images-1302031947.cos.ap-guangzhou.myqcloud.com/images/image-20211112103420641.png",alt:"image-20211112103420641"}})]),t._v(" "),s("p",[t._v("从图中可以看出，渲染进程把"),s("u",[t._v("生成位图的指令")]),t._v("发送给 GPU，然后在 GPU 中"),s("u",[t._v("执行指令")]),t._v("，生成图块的位图，并"),s("u",[t._v("保存在 GPU 的内存")]),t._v("中。")]),t._v(" "),s("h2",{attrs:{id:"合成和显示"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#合成和显示"}},[t._v("#")]),t._v(" 合成和显示")]),t._v(" "),s("p",[t._v("栅格化操作完成后，"),s("strong",[t._v("合成线程")]),t._v("会生成一个"),s("u",[t._v("绘制命令")]),t._v('，即"'),s("u",[t._v("DrawQuad")]),t._v('"，并发送给浏览器进程。')]),t._v(" "),s("p",[t._v("浏览器进程中的"),s("u",[s("code",[t._v("viz组件")])]),t._v("接收到这个命令，根据这个命令，"),s("u",[t._v("把页面内容绘制到内存")]),t._v("，也就是生成了页面，然后把这部分内存"),s("u",[t._v("发送给显卡")]),t._v(",那你肯定对显卡的原理很好奇。")]),t._v(" "),s("p",[t._v("看了某博主对显示器显示图像的原理解释:")]),t._v(" "),s("blockquote",[s("p",[t._v("无论是 PC 显示器还是手机屏幕，都有一个固定的刷新频率，一般是 60 HZ，即 60 帧，也就是一秒更新 60 张图片，一张图片停留的时间约为 16.7 ms。而每次更新的图片都来自显卡的"),s("strong",[t._v("前缓冲区")]),t._v("。而显卡接收到浏览器进程传来的页面后，会合成相应的图像，并将图像保存到"),s("strong",[t._v("后缓冲区")]),t._v("，然后系统自动将"),s("code",[t._v("前缓冲区")]),t._v("和"),s("code",[t._v("后缓冲区")]),t._v("对换位置，如此循环更新。")])]),t._v(" "),s("p",[t._v("这个时候，心中就有点概念了，比如某个动画大量占用内存时，浏览器生成图像的时候会变慢，图像传送给显卡就会不及时，而显示器还是以不变的频率刷新，因此会出现卡顿，也就是明显的"),s("u",[t._v("掉帧现象")]),t._v("。")]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("用一张图来总结 👇")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://blog-images-1302031947.cos.ap-guangzhou.myqcloud.com/images/image-20211112103429579.png",alt:"image-20211112103429579"}})]),t._v(" "),s("p",[t._v("我们把上面整个的渲染流水线，用一张图片更直观的表示 👇")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://blog-images-1302031947.cos.ap-guangzhou.myqcloud.com/images/image-20211112103434423.png",alt:"image-20211112103434423"}})]),t._v(" "),s("h2",{attrs:{id:"回流-重绘-合成"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#回流-重绘-合成"}},[t._v("#")]),t._v(" 回流-重绘-合成")]),t._v(" "),s("p",[t._v("更新视图三种方式")]),t._v(" "),s("ul",[s("li",[s("u",[t._v("回流")])]),t._v(" "),s("li",[s("u",[t._v("重绘")])]),t._v(" "),s("li",[s("u",[t._v("合成")])])]),t._v(" "),s("h3",{attrs:{id:"重排-回流-布局"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重排-回流-布局"}},[t._v("#")]),t._v(" 重排（回流/布局）")]),t._v(" "),s("p",[s("code",[t._v("Render Object")]),t._v(" 在添加到树之后，还需要重新计算位置和大小；"),s("code",[t._v("ComputedStyle")]),t._v(" 里面已经包含了这些信息，"),s("u",[s("strong",[t._v("为什么还需要重新计算呢？")])]),t._v("因为像 "),s("code",[t._v("margin: 0 auto;")]),t._v(" 这样的声明是不能直接使用的，需要转化成实际的大小，才能通过**"),s("u",[t._v("绘图引擎")]),t._v("**绘制节点；这也是 "),s("code",[t._v("DOM Tree")]),t._v(" 和 "),s("code",[t._v("CSSOM Tree")]),t._v(" 需要组合成 "),s("code",[t._v("Render Object Tree")]),t._v(" 的原因之一。")]),t._v(" "),s("p",[t._v("布局是从 "),s("code",[t._v("Root Render Object")]),t._v(" 开始"),s("u",[t._v("递归")]),t._v("的，每一个 "),s("code",[t._v("Render Object")]),t._v(" 都有对自身进行布局的方法。")]),t._v(" "),s("p",[s("u",[s("strong",[t._v("为什么需要递归")])]),t._v("（也就是先计算子节点再回头计算父节点）计算位置和大小呢？")]),t._v(" "),s("p",[t._v("因为有些布局信息需要"),s("u",[t._v("子节点先计算")]),t._v("，之后才能通过子节点的布局信息"),s("u",[t._v("计算出父节点")]),t._v("的位置和大小；")]),t._v(" "),s("p",[t._v("例如父节点的高度需要子节点撑起。如果子节点的宽度是父节点高度的 50%，要怎么办呢？这就需要在计算子节点之前，先计算自身的布局信息，再传递给子节点，子节点根据这些信息计算好之后就会告诉父节点是否需要重新计算。")]),t._v(" "),s("p",[t._v("重排触发的条件就是:"),s("strong",[t._v("对 DOM 结构的修改引发 DOM "),s("u",[t._v("几何尺寸变化")]),t._v("的时候")]),t._v(",会发生"),s("u",[t._v("回流")]),t._v("过程。")]),t._v(" "),s("p",[t._v("具体一点，有以下的操作会触发回流:")]),t._v(" "),s("ol",[s("li",[t._v("一个 DOM 元素的"),s("u",[t._v("几何属性变化")]),t._v("，常见的几何属性有"),s("code",[t._v("width")]),t._v("、"),s("code",[t._v("height")]),t._v("、"),s("code",[t._v("padding")]),t._v("、"),s("code",[t._v("margin")]),t._v("、"),s("code",[t._v("left")]),t._v("、"),s("code",[t._v("top")]),t._v("、"),s("code",[t._v("border")]),t._v(" 等等, 这个很好理解。")]),t._v(" "),s("li",[t._v("使 DOM 节点发生"),s("u",[t._v("增减")]),t._v("或者"),s("u",[t._v("移动")]),t._v("。")]),t._v(" "),s("li",[t._v("读写 "),s("code",[t._v("offset")]),t._v("族、"),s("code",[t._v("scroll")]),t._v("族和"),s("code",[t._v("client")]),t._v("族属性的时候，浏览器为了获取这些值，需要进行回流操作。")]),t._v(" "),s("li",[t._v("调用 "),s("code",[t._v("window.getComputedStyle")]),t._v(" 方法。")])]),t._v(" "),s("p",[t._v("一些常用且会导致回流的属性和方法：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("clientWidth")]),t._v("、"),s("code",[t._v("clientHeight")]),t._v("、"),s("code",[t._v("clientTop")]),t._v("、"),s("code",[t._v("clientLeft")])]),t._v(" "),s("li",[s("code",[t._v("offsetWidth")]),t._v("、"),s("code",[t._v("offsetHeight")]),t._v("、"),s("code",[t._v("offsetTop")]),t._v("、"),s("code",[t._v("offsetLeft")])]),t._v(" "),s("li",[s("code",[t._v("scrollWidth")]),t._v("、"),s("code",[t._v("scrollHeight")]),t._v("、"),s("code",[t._v("scrollTop")]),t._v("、"),s("code",[t._v("scrollLeft")])]),t._v(" "),s("li",[s("code",[t._v("scrollIntoView()")]),t._v("、"),s("code",[t._v("scrollIntoViewIfNeeded()")])]),t._v(" "),s("li",[s("code",[t._v("getComputedStyle()")])]),t._v(" "),s("li",[s("code",[t._v("getBoundingClientRect()")])]),t._v(" "),s("li",[s("code",[t._v("scrollTo()")])])]),t._v(" "),s("p",[t._v("依照上面的渲染流水线，触发回流的时候，如果 DOM 结构发生改变，则重新渲染 DOM 树，然后将后面的流程(包括主线程之外的任务)全部走一遍。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://blog-images-1302031947.cos.ap-guangzhou.myqcloud.com/images/image-20211112103440561.png",alt:"image-20211112103440561"}})]),t._v(" "),s("h3",{attrs:{id:"重绘"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重绘"}},[t._v("#")]),t._v(" 重绘")]),t._v(" "),s("p",[t._v("当页面中元素样式的改变并不影响它在文档流中的位置时（例如："),s("code",[t._v("color")]),t._v("、"),s("code",[t._v("background-color")]),t._v("、"),s("code",[t._v("visibility")]),t._v("等），浏览器会将新样式赋予给元素并重新绘制它，这个过程称为重绘。")]),t._v(" "),s("p",[t._v("根据概念，我们知道由于没有导致 DOM 几何属性的变化，因此元素的位置信息不需要更新，从而省去布局的过程，流程如下：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://blog-images-1302031947.cos.ap-guangzhou.myqcloud.com/images/image-20211112103444788.png",alt:"image-20211112103444788"}})]),t._v(" "),s("p",[t._v("跳过了**"),s("u",[t._v("布局树")]),t._v("**和"),s("u",[s("strong",[t._v("建图层树")])]),t._v(",直接去绘制列表，然后在去分块,生成位图等一系列操作。")]),t._v(" "),s("p",[t._v("可以看到，"),s("u",[t._v("重绘不一定导致回流，但回流一定发生了重绘")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"flush-队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flush-队列"}},[t._v("#")]),t._v(" flush 队列")]),t._v(" "),s("p",[t._v("部分浏览器缓存了一个"),s("u",[t._v("flush 队列")]),t._v("，把我们触发的回流与重绘任务都塞进去，待到队列里的任务多起来，或者达到了一定的时间间隔，或者“不得已”的时候，再将这些任务一口气出队列，但是当我们访问一些及时属性时，浏览器会为了获得此时此刻、最准确的属性值，而"),s("u",[t._v("提前")]),t._v("将 flush 队列的任务出队列")]),t._v(" "),s("h3",{attrs:{id:"合成"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#合成"}},[t._v("#")]),t._v(" 合成")]),t._v(" "),s("p",[t._v("还有一种情况：就是"),s("strong",[t._v("更改了一个既不要布局也不要绘制")]),t._v("的属性，那么渲染引擎会跳过布局和绘制，直接执行后续的"),s("strong",[t._v("合成")]),t._v("操作，这个过程就叫"),s("strong",[t._v("合成")]),t._v("。")]),t._v(" "),s("p",[t._v("举个例子：比如使用"),s("code",[t._v("CSS")]),t._v("的"),s("code",[t._v("transform")]),t._v("来实现动画效果，"),s("strong",[t._v("避免了回流跟重绘")]),t._v("，"),s("u",[t._v("直接在非主线程中执行合成动画操作")]),t._v("。显然这样子的效率更高，毕竟这个是在非主线程上合成的，"),s("u",[t._v("没有占用主线程资源")]),t._v("，另外也避开了布局和绘制两个子阶段，所以"),s("strong",[t._v("相对于重绘和重排，合成能大大提升绘制效率。")])]),t._v(" "),s("p",[t._v("利用这一点好处：")]),t._v(" "),s("ul",[s("li",[t._v("合成层的位图，会交由 "),s("u",[s("code",[t._v("GPU")]),t._v("（显卡）")]),t._v(" 合成，比 "),s("code",[t._v("CPU")]),t._v(" 处理要快")]),t._v(" "),s("li",[t._v("当需要 "),s("code",[t._v("repaint")]),t._v(" 时，只需要 "),s("code",[t._v("repaint")]),t._v(" 本身，不会影响到其他的层")]),t._v(" "),s("li",[t._v("对于 "),s("code",[t._v("transform")]),t._v(" 和 "),s("code",[t._v("opacity")]),t._v(" 效果，不会触发 "),s("code",[t._v("layout")]),t._v(" 和 "),s("code",[t._v("paint")])])]),t._v(" "),s("p",[s("u",[t._v("提升合成层的最好方式是使用 "),s("code",[t._v("CSS")]),t._v(" 的 "),s("code",[t._v("will-change")]),t._v(" 属性")])]),t._v(" "),s("h3",{attrs:{id:"gpu-加速原因"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gpu-加速原因"}},[t._v("#")]),t._v(" GPU 加速原因")]),t._v(" "),s("p",[t._v("比如利用 CSS3 的"),s("code",[t._v("transform")]),t._v("、"),s("code",[t._v("opacity")]),t._v("、"),s("code",[t._v("filter")]),t._v("这些属性就可以实现合成的效果，也就是大家常说的**"),s("u",[t._v("GPU 加速")]),t._v("**。")]),t._v(" "),s("ul",[s("li",[t._v("在合成的情况下，直接跳过布局和绘制流程，进入非主线程处理部分，即"),s("u",[t._v("直接交给合成线程处理")]),t._v("。")]),t._v(" "),s("li",[t._v("充分发挥"),s("code",[t._v("GPU")]),t._v("优势，合成线程生成位图的过程中会"),s("u",[t._v("调用线程池")]),t._v("，并在其中使用"),s("code",[t._v("GPU")]),t._v("进行加速生成，而"),s("u",[s("code",[t._v("GPU")]),t._v(" 是擅长处理位图数据")]),t._v("的。")]),t._v(" "),s("li",[t._v("没有占用主线程的资源，即使主线程卡住了，效果依然流畅展示。")])]),t._v(" "),s("h2",{attrs:{id:"实践意义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实践意义"}},[t._v("#")]),t._v(" 实践意义")]),t._v(" "),s("ul",[s("li",[t._v("使用"),s("code",[t._v("createDocumentFragment")]),t._v("进行批量的 DOM 操作")]),t._v(" "),s("li",[t._v("对于 "),s("code",[t._v("resize")]),t._v("、"),s("code",[t._v("scroll")]),t._v(" 等进行防抖/节流处理。")]),t._v(" "),s("li",[t._v("动画使用"),s("code",[t._v("transform")]),t._v("或者"),s("code",[t._v("opacity")]),t._v("实现")]),t._v(" "),s("li",[t._v("将元素的"),s("code",[t._v("will-change")]),t._v(" 设置为 "),s("code",[t._v("opacity、transform、top、left、bottom、right")]),t._v(" 。这样子渲染引擎会为其单独实现一个图层，当这些变换发生时，仅仅只是利用合成线程去处理这些变换，而不牵扯到主线程，大大提高渲染效率。")]),t._v(" "),s("li",[t._v("对于不支持"),s("code",[t._v("will-change")]),t._v(" 属性的浏览器，使用一个"),s("u",[s("code",[t._v("3D transform")]),t._v("属性来强制提升")]),t._v("为合成 "),s("code",[t._v("transform: translateZ(0);")])]),t._v(" "),s("li",[s("code",[t._v("requestAnimationFrame")]),t._v("优化等等")])]),t._v(" "),s("h2",{attrs:{id:"面试知识点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#面试知识点"}},[t._v("#")]),t._v(" 面试知识点")]),t._v(" "),s("h3",{attrs:{id:"load-和-domcontentloaded-区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#load-和-domcontentloaded-区别"}},[t._v("#")]),t._v(" Load 和 "),s("code",[t._v("DOMContentLoaded")]),t._v(" 区别")]),t._v(" "),s("p",[t._v("Load 事件触发代表页面中的 "),s("code",[t._v("DOM")]),t._v("，"),s("code",[t._v("CSS")]),t._v("，"),s("code",[t._v("JS")]),t._v("，图片已经全部加载完毕。")]),t._v(" "),s("p",[s("code",[t._v("DOMContentLoaded")]),t._v(" 事件触发代表"),s("u",[t._v("初始的 HTML 被完全加载和解析")]),t._v("，不需要等待 "),s("code",[t._v("CSS")]),t._v("，"),s("code",[t._v("JS")]),t._v("，图片加载。")]),t._v(" "),s("h3",{attrs:{id:"图层-layer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#图层-layer"}},[t._v("#")]),t._v(" 图层（Layer）")]),t._v(" "),s("p",[t._v("一般来说，可以把普通文档流看成一个图层。特定的属性可以生成一个新的图层。"),s("strong",[t._v("不同的图层渲染互不影响")]),t._v("，所以对于某些频繁需要渲染的建议单独生成一个新图层，提高性能。"),s("strong",[t._v("但也不能生成过多的图层，会引起反作用（层爆炸）。")])]),t._v(" "),s("p",[t._v("通过以下几个常用属性可以生成新图层")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("3D")]),t._v(" 变换："),s("code",[t._v("translate3d")]),t._v("、"),s("code",[t._v("translateZ")])]),t._v(" "),s("li",[s("code",[t._v("will-change")])]),t._v(" "),s("li",[s("code",[t._v("video")]),t._v("、"),s("code",[t._v("iframe")]),t._v(" 标签")]),t._v(" "),s("li",[t._v("通过动画实现的 "),s("code",[t._v("opacity")]),t._v(" 动画转换")]),t._v(" "),s("li",[s("code",[t._v("position: fixed")])])]),t._v(" "),s("h3",{attrs:{id:"重绘-repaint-和回流-reflow"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重绘-repaint-和回流-reflow"}},[t._v("#")]),t._v(" 重绘（Repaint）和回流（Reflow）")]),t._v(" "),s("p",[t._v("重绘和回流是渲染步骤中的一小节，但是这两个步骤对于性能影响很大。")]),t._v(" "),s("ul",[s("li",[t._v("重绘是当节点需要更改外观而不会影响布局的，比如改变 "),s("code",[t._v("color")]),t._v(" 就叫称为重绘")]),t._v(" "),s("li",[t._v("回流是布局或者几何属性需要改变就称为回流。")])]),t._v(" "),s("p",[t._v("回流必定会发生重绘，重绘不一定会引发回流。回流所需的成本比重绘高的多，改变深层次的节点很可能导致父节点的一系列回流。")]),t._v(" "),s("p",[t._v("所以以下几个动作可能会导致性能问题：")]),t._v(" "),s("ul",[s("li",[t._v("改变 window 大小")]),t._v(" "),s("li",[t._v("改变字体")]),t._v(" "),s("li",[t._v("添加或删除样式")]),t._v(" "),s("li",[t._v("文字改变")]),t._v(" "),s("li",[t._v("定位或者浮动")]),t._v(" "),s("li",[t._v("盒模型")])]),t._v(" "),s("p",[t._v("很多人不知道的是，重绘和回流其实和 "),s("code",[t._v("Event loop")]),t._v(" 有关。")]),t._v(" "),s("ol",[s("li",[t._v("当 "),s("code",[t._v("Event loop")]),t._v(" 执行完 "),s("code",[t._v("Microtasks")]),t._v(" 后，会判断 "),s("code",[t._v("document")]),t._v(" 是否需要更新。因为浏览器是 "),s("code",[t._v("60Hz")]),t._v(" 的刷新率，每 "),s("code",[t._v("16ms")]),t._v(" 才会更新一次。")]),t._v(" "),s("li",[t._v("然后判断是否有 "),s("code",[t._v("resize")]),t._v(" 或者 "),s("code",[t._v("scroll")]),t._v(" ，有的话会去触发事件，所以 "),s("code",[t._v("resize")]),t._v(" 和 "),s("code",[t._v("scroll")]),t._v(" 事件也是至少 "),s("code",[t._v("16ms")]),t._v(" 才会触发一次，并且自带节流功能。")]),t._v(" "),s("li",[t._v("判断是否触发了 "),s("code",[t._v("media query")])]),t._v(" "),s("li",[t._v("更新动画并且发送事件")]),t._v(" "),s("li",[t._v("判断是否有全屏操作事件")]),t._v(" "),s("li",[t._v("执行 "),s("code",[t._v("requestAnimationFrame")]),t._v(" 回调")]),t._v(" "),s("li",[t._v("执行 "),s("code",[t._v("IntersectionObserver")]),t._v(" 回调，该方法用于判断元素是否可见，可以用于懒加载上，但是兼容性不好")]),t._v(" "),s("li",[t._v("更新界面")]),t._v(" "),s("li",[t._v("以上就是一帧中可能会做的事情。如果在一帧中有空闲时间，就会去执行 "),s("code",[t._v("requestIdleCallback")]),t._v(" 回调。")])]),t._v(" "),s("p",[t._v("以上内容来自于 "),s("a",{attrs:{href:"https://html.spec.whatwg.org/multipage/webappapis.html#event-loop-processing-model",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTML 文档"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"减少重绘和回流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#减少重绘和回流"}},[t._v("#")]),t._v(" 减少重绘和回流")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("使用 "),s("code",[t._v("translate")]),t._v(" 替代 "),s("code",[t._v("top")])]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("style")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token style"}},[s("span",{pre:!0,attrs:{class:"token language-css"}},[t._v("\n  "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".test")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("position")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" absolute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("top")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 10px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("style")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}},[s("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 引起回流")]),t._v("\n    document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.test'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("top "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'100px'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n复制代码\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br")])])]),t._v(" "),s("li",[s("p",[t._v("使用 "),s("code",[t._v("visibility")]),t._v(" 替换 "),s("code",[t._v("display: none")]),t._v(" ，因为前者只会引起重绘，后者会引发回流（改变了布局）")])]),t._v(" "),s("li",[s("p",[t._v("把 DOM "),s("u",[t._v("离线")]),t._v("后修改，比如：先把 DOM 给 "),s("code",[t._v("display:none")]),t._v(" (有一次 Reflow)，然后你修改 100 次，然后再把它显示出来")])]),t._v(" "),s("li",[s("p",[t._v("不要把 DOM 结点的属性值放在一个循环里当成循环里的变量")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取 offsetTop 会导致回流，因为需要去获取正确的值")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.test'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("offsetTop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n复制代码\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])])]),t._v(" "),s("li",[s("p",[t._v("不要使用 table 布局，可能很小的一个小改动会造成整个 table 的重新布局")])]),t._v(" "),s("li",[s("p",[t._v("动画实现的速度的选择，动画速度越快，回流次数越多，也可以选择使用 "),s("code",[t._v("requestAnimationFrame")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("CSS")]),t._v(" 选择符从右往左匹配查找，"),s("u",[t._v("避免 "),s("code",[t._v("DOM")]),t._v(" 深度过深")])])]),t._v(" "),s("li",[s("p",[t._v("将"),s("u",[t._v("频繁运行的动画变为图层")]),t._v("，图层能够阻止该节点回流影响别的元素。比如对于 "),s("code",[t._v("video")]),t._v(" 标签，浏览器会自动将该节点变为图层。")])])]),t._v(" "),s("h3",{attrs:{id:"行内样式和-cssstylesheet-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#行内样式和-cssstylesheet-的区别"}},[t._v("#")]),t._v(" 行内样式和 "),s("code",[t._v("CSSStyleSheet")]),t._v(" 的区别")]),t._v(" "),s("p",[t._v("每个 "),s("u",[s("code",[t._v("link")]),t._v("引入的"),s("code",[t._v("CSS")]),t._v(" 文件")]),t._v("或"),s("u",[t._v("嵌入样式（style 标签）")]),t._v("都会"),s("u",[t._v("对应")]),t._v("一个 "),s("code",[t._v("CSS StyleSheet")]),t._v(" 对象")]),t._v(" "),s("p",[t._v("这个对象由一系列的 "),s("code",[t._v("Rule")]),t._v("（规则） 组成；每一条 "),s("code",[t._v("Rule")]),t._v(" 都会包含 "),s("code",[t._v("Selectors")]),t._v("（选择器） 和若干 "),s("code",[t._v("Declearation")]),t._v("（声明），"),s("code",[t._v("Declearation")]),t._v(" 又由 "),s("code",[t._v("Property")]),t._v("（属性）和 "),s("code",[t._v("Value")]),t._v("（值）组成。")]),t._v(" "),s("p",[t._v("另外，浏览器默认样式表（"),s("code",[t._v("defaultStyleSheet")]),t._v("）和用户样式表（"),s("code",[t._v("UserStyleSheet")]),t._v("）也会有对应的 "),s("code",[t._v("CSSStyleSheet")]),t._v(" 对象，因为它们都是单独的 "),s("code",[t._v("CSS")]),t._v(" 文件。")]),t._v(" "),s("p",[t._v("至于行内样式，在构建 "),s("code",[t._v("DOM Tree")]),t._v(" 的时候会直接解析成 "),s("code",[t._v("Declearation")]),t._v(" 集合"),s("u",[t._v("挂载到元素的 style 属性")]),t._v("上。")]),t._v(" "),s("p",[t._v("所有的 "),s("code",[t._v("CSS StyleSheet")]),t._v(" 都挂载在 "),s("code",[t._v("document")]),t._v(" 节点上，我们可以在浏览器中通过 "),s("code",[t._v("document.styleSheets")]),t._v(" 获取到这个集合。行内样式可以直接通过节点的 style 属性查看。")]),t._v(" "),s("p",[t._v("通过一个例子，来了解下行内样式和 "),s("code",[t._v("CSSStyleSheet")]),t._v(" 的区别：")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v("--------demo.html---------\n"),s("span",{pre:!0,attrs:{class:"token doctype"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<!")]),s("span",{pre:!0,attrs:{class:"token doctype-tag"}},[t._v("DOCTYPE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token name"}},[t._v("html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("lang")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("en"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("head")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("charset")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("UTF-8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("viewport"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("content")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("width=device-width, initial-scale=1.0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("http-equiv")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("X-UA-Compatible"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("content")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("ie=edge"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("style")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token style"}},[s("span",{pre:!0,attrs:{class:"token language-css"}},[t._v("\n      "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("body .div1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("line-height")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1em"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    ")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("style")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("link")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("stylesheet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("./style.css"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("style")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token style"}},[s("span",{pre:!0,attrs:{class:"token language-css"}},[t._v("\n      "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".div1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #f0f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    ")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("style")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("title")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Document"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("title")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("head")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("div1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token special-attr"}},[s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("style")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),s("span",{pre:!0,attrs:{class:"token value css language-css"}},[s("span",{pre:!0,attrs:{class:"token property"}},[t._v("font-size")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 12px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("test"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br")])]),s("div",{staticClass:"language-css line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[t._v("----------style.css--------\n"),s("span",{pre:!0,attrs:{class:"token atrule"}},[s("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./index.css"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".div1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #fff"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("div",{staticClass:"language-css line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("----------index.css---------- .div1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 80px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("可以看到一共有三个 "),s("code",[t._v("CSSStyleSheet")]),t._v(" 对象，每个 "),s("code",[t._v("CSSStyleSheet")]),t._v(" 对象的 rules 里面会有一个 style 属性，style 属性的值就是 "),s("code",[t._v("CSSStyleDeclaration")]),t._v("，而行内样式获取到的直接就是 "),s("code",[t._v("CSSStyleDeclaration")]),t._v("。")]),t._v(" "),s("p",[t._v("（在一个"),s("code",[t._v("css")]),t._v("文件中通过"),s("code",[t._v("@import")]),t._v("引入另一个"),s("code",[t._v("css")]),t._v("文件，会合并成一个"),s("code",[t._v("CSS StyleSheet")]),t._v("）")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://blog-images-1302031947.cos.ap-guangzhou.myqcloud.com/images/image-20201210174928221.png",alt:"image-20201210174928221"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"https://blog-images-1302031947.cos.ap-guangzhou.myqcloud.com/images/image-20201210174949382.png",alt:"image-20201210174949382"}})]),t._v(" "),s("h2",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),s("blockquote",[s("p",[s("a",{attrs:{href:"https://juejin.cn/post/6847902222349500430#heading-6",target:"_blank",rel:"noopener noreferrer"}},[t._v("「浏览器工作原理」写给女友的秘籍-渲染流程篇（1.1W 字）"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=MzAxODE4MTEzMA==&mid=2650083493&idx=1&sn=faaf6ea4986e9db9718fdd5fb4bbcc9a&chksm=83db8dc0b4ac04d64983a93fe147760814bc501dfa4a3d39ab2f43c1b9485c56e6a60406b6d6&xtrack=1&scene=90&subscene=93&sessionid=1605411572&clicktime=1605411573&enterid=1605411573&ascene=56&devicetype=android-29&version=27001355&nettype=3gnet&abtest_cookie=AAACAA%3D%3D&lang=zh_CN&exportkey=A%2F2sFBScjPwWf%2BVWMYP8FK4%3D&pass_ticket=56cQsWIuoMCp5DKYb%2FWTUmR8R1V7dtPqUU0wV5Q0jZR%2FRhak3xGBQSVBB%2B%2B5KMO5&wx_header=1",target:"_blank",rel:"noopener noreferrer"}},[t._v("网页渲染性能优化 —— 渲染原理"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=v.exports}}]);